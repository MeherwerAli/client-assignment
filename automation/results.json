[dotenv@17.2.2] injecting env (11) from .env -- tip: üîê prevent building .env in docker: https://dotenvx.com/prebuild
üöÄ Starting global setup for Chat Service API tests...
‚è≥ Waiting for Chat Service to be ready...
‚úÖ Chat Service is ready: {
  status: 'ok',
  uptime: 444.747639165,
  version: '1.0.0',
  timestamp: '2025-09-18T15:58:26.354Z'
}
üßπ Cleaning up test environment...
‚úÖ Global setup completed successfully!
üßπ Starting global teardown for Chat Service API tests...
üóëÔ∏è Cleaning up test data...
‚úÖ Global teardown completed successfully!
{
  "config": {
    "configFile": "/Users/meherwerali/Downloads/client-assignment/automation/playwright.config.ts",
    "rootDir": "/Users/meherwerali/Downloads/client-assignment/automation/tests",
    "forbidOnly": true,
    "fullyParallel": true,
    "globalSetup": "/Users/meherwerali/Downloads/client-assignment/automation/tests/setup/global-setup.ts",
    "globalTeardown": "/Users/meherwerali/Downloads/client-assignment/automation/tests/setup/global-teardown.ts",
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 1
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "json"
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/Users/meherwerali/Downloads/client-assignment/automation/test-results",
        "repeatEach": 1,
        "retries": 2,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "chat-service-api",
        "name": "chat-service-api",
        "testDir": "/Users/meherwerali/Downloads/client-assignment/automation/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.55.0",
    "workers": 1,
    "webServer": null
  },
  "suites": [
    {
      "title": "authentication.spec.ts",
      "file": "authentication.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Authentication Tests",
          "file": "authentication.spec.ts",
          "line": 4,
          "column": 6,
          "specs": [
            {
              "title": "should reject requests without API key",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chat-service-api",
                  "projectName": "chat-service-api",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 24,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-18T15:58:26.674Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "70f6afe7e350c931056e-f5110add200e3435ba71",
              "file": "authentication.spec.ts",
              "line": 11,
              "column": 7
            },
            {
              "title": "should reject requests with invalid API key",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chat-service-api",
                  "projectName": "chat-service-api",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 15,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-18T15:58:26.713Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "70f6afe7e350c931056e-d09b4771e97549e894f9",
              "file": "authentication.spec.ts",
              "line": 23,
              "column": 7
            },
            {
              "title": "should accept requests with valid API key",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chat-service-api",
                  "projectName": "chat-service-api",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 6,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-18T15:58:26.736Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "70f6afe7e350c931056e-a14f42026a3099b6b839",
              "file": "authentication.spec.ts",
              "line": 36,
              "column": 7
            },
            {
              "title": "should require Unique-Reference-Code header",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chat-service-api",
                  "projectName": "chat-service-api",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 12,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-18T15:58:26.748Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "70f6afe7e350c931056e-442c68ba7a2b74bedfe0",
              "file": "authentication.spec.ts",
              "line": 41,
              "column": 7
            },
            {
              "title": "should require x-user-id header",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chat-service-api",
                  "projectName": "chat-service-api",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-18T15:58:26.768Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "70f6afe7e350c931056e-823614b496d8c10f47eb",
              "file": "authentication.spec.ts",
              "line": 64,
              "column": 7
            },
            {
              "title": "should validate x-user-id format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chat-service-api",
                  "projectName": "chat-service-api",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-18T15:58:26.785Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "70f6afe7e350c931056e-3bf80512d21754c9578e",
              "file": "authentication.spec.ts",
              "line": 87,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "error-handling.spec.ts",
      "file": "error-handling.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Error Handling and Edge Cases",
          "file": "error-handling.spec.ts",
          "line": 4,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "Content-Type Validation",
              "file": "error-handling.spec.ts",
              "line": 11,
              "column": 8,
              "specs": [
                {
                  "title": "should handle missing Content-Type header",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 17,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:24:35",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 35,
                              "line": 24
                            },
                            "snippet": "  22 |       // Should either accept or return appropriate error\n  23 |       if (!response.ok()) {\n> 24 |         expect(response.status()).toBe(400);\n     |                                   ^\n  25 |       }\n  26 |     });\n  27 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 35,
                                "line": 24
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n  22 |       // Should either accept or return appropriate error\n  23 |       if (!response.ok()) {\n> 24 |         expect(response.status()).toBe(400);\n     |                                   ^\n  25 |       }\n  26 |     });\n  27 |\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:24:35"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:26.801Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 35,
                            "line": 24
                          }
                        },
                        {
                          "workerIndex": 1,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 33,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:24:35",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 35,
                              "line": 24
                            },
                            "snippet": "  22 |       // Should either accept or return appropriate error\n  23 |       if (!response.ok()) {\n> 24 |         expect(response.status()).toBe(400);\n     |                                   ^\n  25 |       }\n  26 |     });\n  27 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 35,
                                "line": 24
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n  22 |       // Should either accept or return appropriate error\n  23 |       if (!response.ok()) {\n> 24 |         expect(response.status()).toBe(400);\n     |                                   ^\n  25 |       }\n  26 |     });\n  27 |\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:24:35"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:27.124Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/error-handling-Error-Handl-fcf2a-missing-Content-Type-header-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 35,
                            "line": 24
                          }
                        },
                        {
                          "workerIndex": 2,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 23,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:24:35",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 35,
                              "line": 24
                            },
                            "snippet": "  22 |       // Should either accept or return appropriate error\n  23 |       if (!response.ok()) {\n> 24 |         expect(response.status()).toBe(400);\n     |                                   ^\n  25 |       }\n  26 |     });\n  27 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 35,
                                "line": 24
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n  22 |       // Should either accept or return appropriate error\n  23 |       if (!response.ok()) {\n> 24 |         expect(response.status()).toBe(400);\n     |                                   ^\n  25 |       }\n  26 |     });\n  27 |\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:24:35"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:27.493Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 35,
                            "line": 24
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "1a72721d9ac5c938e1fe-447c34bfe33b344fbd38",
                  "file": "error-handling.spec.ts",
                  "line": 12,
                  "column": 9
                },
                {
                  "title": "should handle invalid Content-Type",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 22,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:38:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 33,
                              "line": 38
                            },
                            "snippet": "  36 |       });\n  37 |\n> 38 |       expect(response.status()).toBe(400);\n     |                                 ^\n  39 |     });\n  40 |   });\n  41 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 33,
                                "line": 38
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n  36 |       });\n  37 |\n> 38 |       expect(response.status()).toBe(400);\n     |                                 ^\n  39 |     });\n  40 |   });\n  41 |\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:38:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:27.846Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 33,
                            "line": 38
                          }
                        },
                        {
                          "workerIndex": 4,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 39,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:38:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 33,
                              "line": 38
                            },
                            "snippet": "  36 |       });\n  37 |\n> 38 |       expect(response.status()).toBe(400);\n     |                                 ^\n  39 |     });\n  40 |   });\n  41 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 33,
                                "line": 38
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n  36 |       });\n  37 |\n> 38 |       expect(response.status()).toBe(400);\n     |                                 ^\n  39 |     });\n  40 |   });\n  41 |\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:38:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:28.168Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/error-handling-Error-Handl-29ff9-handle-invalid-Content-Type-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 33,
                            "line": 38
                          }
                        },
                        {
                          "workerIndex": 5,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 22,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:38:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 33,
                              "line": 38
                            },
                            "snippet": "  36 |       });\n  37 |\n> 38 |       expect(response.status()).toBe(400);\n     |                                 ^\n  39 |     });\n  40 |   });\n  41 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 33,
                                "line": 38
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n  36 |       });\n  37 |\n> 38 |       expect(response.status()).toBe(400);\n     |                                 ^\n  39 |     });\n  40 |   });\n  41 |\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:38:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:28.527Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 33,
                            "line": 38
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "1a72721d9ac5c938e1fe-e3ceb02e520d97848dbd",
                  "file": "error-handling.spec.ts",
                  "line": 28,
                  "column": 9
                }
              ]
            },
            {
              "title": "JSON Parsing",
              "file": "error-handling.spec.ts",
              "line": 42,
              "column": 8,
              "specs": [
                {
                  "title": "should handle malformed JSON",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 6,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 23,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:53:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 33,
                              "line": 53
                            },
                            "snippet": "  51 |       });\n  52 |\n> 53 |       expect(response.status()).toBe(400);\n     |                                 ^\n  54 |       const error = await response.json();\n  55 |       expect(error).toHaveProperty(\"errors\");\n  56 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 33,
                                "line": 53
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n  51 |       });\n  52 |\n> 53 |       expect(response.status()).toBe(400);\n     |                                 ^\n  54 |       const error = await response.json();\n  55 |       expect(error).toHaveProperty(\"errors\");\n  56 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:53:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:28.852Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 33,
                            "line": 53
                          }
                        },
                        {
                          "workerIndex": 7,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 32,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:53:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 33,
                              "line": 53
                            },
                            "snippet": "  51 |       });\n  52 |\n> 53 |       expect(response.status()).toBe(400);\n     |                                 ^\n  54 |       const error = await response.json();\n  55 |       expect(error).toHaveProperty(\"errors\");\n  56 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 33,
                                "line": 53
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n  51 |       });\n  52 |\n> 53 |       expect(response.status()).toBe(400);\n     |                                 ^\n  54 |       const error = await response.json();\n  55 |       expect(error).toHaveProperty(\"errors\");\n  56 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:53:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:29.173Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/error-handling-Error-Handl-c02e5-hould-handle-malformed-JSON-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 33,
                            "line": 53
                          }
                        },
                        {
                          "workerIndex": 8,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 24,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:53:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 33,
                              "line": 53
                            },
                            "snippet": "  51 |       });\n  52 |\n> 53 |       expect(response.status()).toBe(400);\n     |                                 ^\n  54 |       const error = await response.json();\n  55 |       expect(error).toHaveProperty(\"errors\");\n  56 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 33,
                                "line": 53
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n  51 |       });\n  52 |\n> 53 |       expect(response.status()).toBe(400);\n     |                                 ^\n  54 |       const error = await response.json();\n  55 |       expect(error).toHaveProperty(\"errors\");\n  56 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:53:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:29.540Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 33,
                            "line": 53
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "1a72721d9ac5c938e1fe-042d33339b204add982e",
                  "file": "error-handling.spec.ts",
                  "line": 43,
                  "column": 9
                },
                {
                  "title": "should handle empty request body where body is required",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 9,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 33,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:73:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 33,
                              "line": 73
                            },
                            "snippet": "  71 |       );\n  72 |\n> 73 |       expect(response.status()).toBe(400);\n     |                                 ^\n  74 |     });\n  75 |   });\n  76 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 33,
                                "line": 73
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n  71 |       );\n  72 |\n> 73 |       expect(response.status()).toBe(400);\n     |                                 ^\n  74 |     });\n  75 |   });\n  76 |\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:73:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:30.140Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 33,
                            "line": 73
                          }
                        },
                        {
                          "workerIndex": 10,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 39,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:73:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 33,
                              "line": 73
                            },
                            "snippet": "  71 |       );\n  72 |\n> 73 |       expect(response.status()).toBe(400);\n     |                                 ^\n  74 |     });\n  75 |   });\n  76 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 33,
                                "line": 73
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n  71 |       );\n  72 |\n> 73 |       expect(response.status()).toBe(400);\n     |                                 ^\n  74 |     });\n  75 |   });\n  76 |\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:73:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:30.511Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/error-handling-Error-Handl-91e78-body-where-body-is-required-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 33,
                            "line": 73
                          }
                        },
                        {
                          "workerIndex": 11,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 23,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:73:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 33,
                              "line": 73
                            },
                            "snippet": "  71 |       );\n  72 |\n> 73 |       expect(response.status()).toBe(400);\n     |                                 ^\n  74 |     });\n  75 |   });\n  76 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 33,
                                "line": 73
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n  71 |       );\n  72 |\n> 73 |       expect(response.status()).toBe(400);\n     |                                 ^\n  74 |     });\n  75 |   });\n  76 |\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:73:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:30.862Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 33,
                            "line": 73
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "1a72721d9ac5c938e1fe-745928a5255d65e87491",
                  "file": "error-handling.spec.ts",
                  "line": 58,
                  "column": 9
                }
              ]
            },
            {
              "title": "Large Payloads",
              "file": "error-handling.spec.ts",
              "line": 77,
              "column": 8,
              "specs": [
                {
                  "title": "should handle large session title",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 66,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:31.188Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1a72721d9ac5c938e1fe-8f538baaec42a769dd1d",
                  "file": "error-handling.spec.ts",
                  "line": 78,
                  "column": 9
                },
                {
                  "title": "should handle large message content",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 161,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:31.266Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1a72721d9ac5c938e1fe-376eabaee8ba52ebf069",
                  "file": "error-handling.spec.ts",
                  "line": 90,
                  "column": 9
                },
                {
                  "title": "should handle large context object",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 25,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:31.434Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1a72721d9ac5c938e1fe-7ccc9094f13dee6d2ffa",
                  "file": "error-handling.spec.ts",
                  "line": 112,
                  "column": 9
                }
              ]
            },
            {
              "title": "Concurrent Operations",
              "file": "error-handling.spec.ts",
              "line": 151,
              "column": 8,
              "specs": [
                {
                  "title": "should handle concurrent session creation",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 164,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:31.467Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1a72721d9ac5c938e1fe-190706fbad5166a3a681",
                  "file": "error-handling.spec.ts",
                  "line": 152,
                  "column": 9
                },
                {
                  "title": "should handle concurrent message additions to same session",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 39,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at forEach (/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:204:31)\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:203:17",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 31,
                              "line": 204
                            },
                            "snippet": "  202 |       // All should succeed\n  203 |       responses.forEach((response) => {\n> 204 |         expect(response.ok()).toBeTruthy();\n      |                               ^\n  205 |       });\n  206 |\n  207 |       // Verify all messages were added"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 31,
                                "line": 204
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  202 |       // All should succeed\n  203 |       responses.forEach((response) => {\n> 204 |         expect(response.ok()).toBeTruthy();\n      |                               ^\n  205 |       });\n  206 |\n  207 |       // Verify all messages were added\n    at forEach (/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:204:31)\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:203:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:31.637Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 31,
                            "line": 204
                          }
                        },
                        {
                          "workerIndex": 13,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 74,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at forEach (/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:204:31)\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:203:17",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 31,
                              "line": 204
                            },
                            "snippet": "  202 |       // All should succeed\n  203 |       responses.forEach((response) => {\n> 204 |         expect(response.ok()).toBeTruthy();\n      |                               ^\n  205 |       });\n  206 |\n  207 |       // Verify all messages were added"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 31,
                                "line": 204
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  202 |       // All should succeed\n  203 |       responses.forEach((response) => {\n> 204 |         expect(response.ok()).toBeTruthy();\n      |                               ^\n  205 |       });\n  206 |\n  207 |       // Verify all messages were added\n    at forEach (/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:204:31)\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:203:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:31.982Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/error-handling-Error-Handl-c5405-e-additions-to-same-session-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 31,
                            "line": 204
                          }
                        },
                        {
                          "workerIndex": 14,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 49,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at forEach (/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:204:31)\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:203:17",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 31,
                              "line": 204
                            },
                            "snippet": "  202 |       // All should succeed\n  203 |       responses.forEach((response) => {\n> 204 |         expect(response.ok()).toBeTruthy();\n      |                               ^\n  205 |       });\n  206 |\n  207 |       // Verify all messages were added"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 31,
                                "line": 204
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  202 |       // All should succeed\n  203 |       responses.forEach((response) => {\n> 204 |         expect(response.ok()).toBeTruthy();\n      |                               ^\n  205 |       });\n  206 |\n  207 |       // Verify all messages were added\n    at forEach (/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:204:31)\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:203:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:32.371Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 31,
                            "line": 204
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "1a72721d9ac5c938e1fe-bec4a2dd535a04227191",
                  "file": "error-handling.spec.ts",
                  "line": 183,
                  "column": 9
                }
              ]
            },
            {
              "title": "Special Characters and Encoding",
              "file": "error-handling.spec.ts",
              "line": 218,
              "column": 8,
              "specs": [
                {
                  "title": "should handle Unicode characters in session title",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 28,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:32.727Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1a72721d9ac5c938e1fe-8713c2dcf52d6648d81e",
                  "file": "error-handling.spec.ts",
                  "line": 219,
                  "column": 9
                },
                {
                  "title": "should handle Unicode characters in message content",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 14,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:244:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 29,
                              "line": 244
                            },
                            "snippet": "  242 |       );\n  243 |\n> 244 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  245 |       const message = await response.json();\n  246 |       expect(message.content).toBe(unicodeContent);\n  247 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 29,
                                "line": 244
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  242 |       );\n  243 |\n> 244 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  245 |       const message = await response.json();\n  246 |       expect(message.content).toBe(unicodeContent);\n  247 |\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:244:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:32.766Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 29,
                            "line": 244
                          }
                        },
                        {
                          "workerIndex": 16,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 42,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:244:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 29,
                              "line": 244
                            },
                            "snippet": "  242 |       );\n  243 |\n> 244 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  245 |       const message = await response.json();\n  246 |       expect(message.content).toBe(unicodeContent);\n  247 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 29,
                                "line": 244
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  242 |       );\n  243 |\n> 244 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  245 |       const message = await response.json();\n  246 |       expect(message.content).toBe(unicodeContent);\n  247 |\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:244:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:33.112Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/error-handling-Error-Handl-1dd97-aracters-in-message-content-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 29,
                            "line": 244
                          }
                        },
                        {
                          "workerIndex": 17,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 31,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:244:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 29,
                              "line": 244
                            },
                            "snippet": "  242 |       );\n  243 |\n> 244 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  245 |       const message = await response.json();\n  246 |       expect(message.content).toBe(unicodeContent);\n  247 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 29,
                                "line": 244
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  242 |       );\n  243 |\n> 244 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  245 |       const message = await response.json();\n  246 |       expect(message.content).toBe(unicodeContent);\n  247 |\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:244:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:33.471Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 29,
                            "line": 244
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "1a72721d9ac5c938e1fe-2e84fc3b89aee35326a9",
                  "file": "error-handling.spec.ts",
                  "line": 231,
                  "column": 9
                },
                {
                  "title": "should handle special JSON characters",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 18,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 31,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:271:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 29,
                              "line": 271
                            },
                            "snippet": "  269 |       );\n  270 |\n> 271 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  272 |       const message = await response.json();\n  273 |       expect(message.content).toBe(specialContent);\n  274 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 29,
                                "line": 271
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  269 |       );\n  270 |\n> 271 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  272 |       const message = await response.json();\n  273 |       expect(message.content).toBe(specialContent);\n  274 |\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:271:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:33.818Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 29,
                            "line": 271
                          }
                        },
                        {
                          "workerIndex": 19,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 43,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:271:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 29,
                              "line": 271
                            },
                            "snippet": "  269 |       );\n  270 |\n> 271 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  272 |       const message = await response.json();\n  273 |       expect(message.content).toBe(specialContent);\n  274 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 29,
                                "line": 271
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  269 |       );\n  270 |\n> 271 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  272 |       const message = await response.json();\n  273 |       expect(message.content).toBe(specialContent);\n  274 |\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:271:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:34.158Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/error-handling-Error-Handl-faf02-dle-special-JSON-characters-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 29,
                            "line": 271
                          }
                        },
                        {
                          "workerIndex": 20,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 29,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:271:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 29,
                              "line": 271
                            },
                            "snippet": "  269 |       );\n  270 |\n> 271 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  272 |       const message = await response.json();\n  273 |       expect(message.content).toBe(specialContent);\n  274 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 29,
                                "line": 271
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  269 |       );\n  270 |\n> 271 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  272 |       const message = await response.json();\n  273 |       expect(message.content).toBe(specialContent);\n  274 |\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:271:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:34.512Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 29,
                            "line": 271
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "1a72721d9ac5c938e1fe-552ff88e8a8899cac1d7",
                  "file": "error-handling.spec.ts",
                  "line": 258,
                  "column": 9
                }
              ]
            },
            {
              "title": "Database Connection Resilience",
              "file": "error-handling.spec.ts",
              "line": 280,
              "column": 8,
              "specs": [
                {
                  "title": "should handle service availability gracefully",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 21,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 24,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:34.841Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1a72721d9ac5c938e1fe-f8c5b67e50c26a6fe351",
                  "file": "error-handling.spec.ts",
                  "line": 281,
                  "column": 9
                }
              ]
            },
            {
              "title": "HTTP Methods Validation",
              "file": "error-handling.spec.ts",
              "line": 295,
              "column": 8,
              "specs": [
                {
                  "title": "should reject unsupported HTTP methods",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 21,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:34.876Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1a72721d9ac5c938e1fe-4b0616f84eef3e6c6d5e",
                  "file": "error-handling.spec.ts",
                  "line": 296,
                  "column": 9
                },
                {
                  "title": "should reject PUT method on endpoints that don't support it",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 21,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 6,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:324:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 33,
                              "line": 324
                            },
                            "snippet": "  322 |       });\n  323 |\n> 324 |       expect(response.status()).toBe(405); // Method Not Allowed\n      |                                 ^\n  325 |     });\n  326 |   });\n  327 | });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 33,
                                "line": 324
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n  322 |       });\n  323 |\n> 324 |       expect(response.status()).toBe(405); // Method Not Allowed\n      |                                 ^\n  325 |     });\n  326 |   });\n  327 | });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:324:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:34.889Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 33,
                            "line": 324
                          }
                        },
                        {
                          "workerIndex": 22,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 32,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:324:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 33,
                              "line": 324
                            },
                            "snippet": "  322 |       });\n  323 |\n> 324 |       expect(response.status()).toBe(405); // Method Not Allowed\n      |                                 ^\n  325 |     });\n  326 |   });\n  327 | });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 33,
                                "line": 324
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n  322 |       });\n  323 |\n> 324 |       expect(response.status()).toBe(405); // Method Not Allowed\n      |                                 ^\n  325 |     });\n  326 |   });\n  327 | });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:324:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:35.191Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/error-handling-Error-Handl-79880-oints-that-don-t-support-it-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 33,
                            "line": 324
                          }
                        },
                        {
                          "workerIndex": 23,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 22,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:324:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                              "column": 33,
                              "line": 324
                            },
                            "snippet": "  322 |       });\n  323 |\n> 324 |       expect(response.status()).toBe(405); // Method Not Allowed\n      |                                 ^\n  325 |     });\n  326 |   });\n  327 | });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                                "column": 33,
                                "line": 324
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n  322 |       });\n  323 |\n> 324 |       expect(response.status()).toBe(405); // Method Not Allowed\n      |                                 ^\n  325 |     });\n  326 |   });\n  327 | });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts:324:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:35.535Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/error-handling.spec.ts",
                            "column": 33,
                            "line": 324
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "1a72721d9ac5c938e1fe-9b4cb04f7398de38d3a1",
                  "file": "error-handling.spec.ts",
                  "line": 312,
                  "column": 9
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "title": "health.spec.ts",
      "file": "health.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Chat Service Health Check",
          "file": "health.spec.ts",
          "line": 4,
          "column": 6,
          "specs": [
            {
              "title": "should return health status",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chat-service-api",
                  "projectName": "chat-service-api",
                  "results": [
                    {
                      "workerIndex": 24,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 25,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-18T15:58:35.860Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "760d72a3746ac5132f88-98e02d282fcef8e22a03",
              "file": "health.spec.ts",
              "line": 11,
              "column": 7
            },
            {
              "title": "should handle health check without API key in development",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chat-service-api",
                  "projectName": "chat-service-api",
                  "results": [
                    {
                      "workerIndex": 24,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 7,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-18T15:58:35.896Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "760d72a3746ac5132f88-7f3f6a893ca01aea01d8",
              "file": "health.spec.ts",
              "line": 25,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "integration.spec.ts",
      "file": "integration.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Integration and End-to-End Tests",
          "file": "integration.spec.ts",
          "line": 4,
          "column": 6,
          "specs": [
            {
              "title": "should complete full chat session workflow",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chat-service-api",
                  "projectName": "chat-service-api",
                  "results": [
                    {
                      "workerIndex": 24,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 25,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:42:34",
                        "location": {
                          "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                          "column": 34,
                          "line": 42
                        },
                        "snippet": "  40 |       userMessage.content\n  41 |     );\n> 42 |     expect(userMsgResponse.ok()).toBeTruthy();\n     |                                  ^\n  43 |\n  44 |     const userMsg = await userMsgResponse.json();\n  45 |     expect(userMsg.sender).toBe(\"user\");"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                            "column": 34,
                            "line": 42
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  40 |       userMessage.content\n  41 |     );\n> 42 |     expect(userMsgResponse.ok()).toBeTruthy();\n     |                                  ^\n  43 |\n  44 |     const userMsg = await userMsgResponse.json();\n  45 |     expect(userMsg.sender).toBe(\"user\");\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:42:34"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-18T15:58:35.915Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                        "column": 34,
                        "line": 42
                      }
                    },
                    {
                      "workerIndex": 25,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 293,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:42:34",
                        "location": {
                          "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                          "column": 34,
                          "line": 42
                        },
                        "snippet": "  40 |       userMessage.content\n  41 |     );\n> 42 |     expect(userMsgResponse.ok()).toBeTruthy();\n     |                                  ^\n  43 |\n  44 |     const userMsg = await userMsgResponse.json();\n  45 |     expect(userMsg.sender).toBe(\"user\");"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                            "column": 34,
                            "line": 42
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  40 |       userMessage.content\n  41 |     );\n> 42 |     expect(userMsgResponse.ok()).toBeTruthy();\n     |                                  ^\n  43 |\n  44 |     const userMsg = await userMsgResponse.json();\n  45 |     expect(userMsg.sender).toBe(\"user\");\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:42:34"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-09-18T15:58:36.271Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/integration-Integration-an-67c9f--full-chat-session-workflow-chat-service-api-retry1/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                        "column": 34,
                        "line": 42
                      }
                    },
                    {
                      "workerIndex": 26,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 52,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:42:34",
                        "location": {
                          "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                          "column": 34,
                          "line": 42
                        },
                        "snippet": "  40 |       userMessage.content\n  41 |     );\n> 42 |     expect(userMsgResponse.ok()).toBeTruthy();\n     |                                  ^\n  43 |\n  44 |     const userMsg = await userMsgResponse.json();\n  45 |     expect(userMsg.sender).toBe(\"user\");"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                            "column": 34,
                            "line": 42
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  40 |       userMessage.content\n  41 |     );\n> 42 |     expect(userMsgResponse.ok()).toBeTruthy();\n     |                                  ^\n  43 |\n  44 |     const userMsg = await userMsgResponse.json();\n  45 |     expect(userMsg.sender).toBe(\"user\");\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:42:34"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-09-18T15:58:36.955Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                        "column": 34,
                        "line": 42
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "4c8f7e420cc033ba00ea-481aa2a8a5b8fa990970",
              "file": "integration.spec.ts",
              "line": 24,
              "column": 7
            },
            {
              "title": "should handle multiple concurrent sessions",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chat-service-api",
                  "projectName": "chat-service-api",
                  "results": [
                    {
                      "workerIndex": 27,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 117,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at forEach (/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:181:29)\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:180:22",
                        "location": {
                          "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                          "column": 29,
                          "line": 181
                        },
                        "snippet": "  179 |     // All messages should be added successfully\n  180 |     messageResponses.forEach((response) => {\n> 181 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  182 |     });\n  183 |\n  184 |     // Verify each session has the correct number of messages"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                            "column": 29,
                            "line": 181
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  179 |     // All messages should be added successfully\n  180 |     messageResponses.forEach((response) => {\n> 181 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  182 |     });\n  183 |\n  184 |     // Verify each session has the correct number of messages\n    at forEach (/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:181:29)\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:180:22"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-18T15:58:37.319Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                        "column": 29,
                        "line": 181
                      }
                    },
                    {
                      "workerIndex": 28,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 122,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at forEach (/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:181:29)\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:180:22",
                        "location": {
                          "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                          "column": 29,
                          "line": 181
                        },
                        "snippet": "  179 |     // All messages should be added successfully\n  180 |     messageResponses.forEach((response) => {\n> 181 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  182 |     });\n  183 |\n  184 |     // Verify each session has the correct number of messages"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                            "column": 29,
                            "line": 181
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  179 |     // All messages should be added successfully\n  180 |     messageResponses.forEach((response) => {\n> 181 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  182 |     });\n  183 |\n  184 |     // Verify each session has the correct number of messages\n    at forEach (/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:181:29)\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:180:22"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-09-18T15:58:37.747Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/integration-Integration-an-84b0b-ultiple-concurrent-sessions-chat-service-api-retry1/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                        "column": 29,
                        "line": 181
                      }
                    },
                    {
                      "workerIndex": 29,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 112,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at forEach (/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:181:29)\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:180:22",
                        "location": {
                          "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                          "column": 29,
                          "line": 181
                        },
                        "snippet": "  179 |     // All messages should be added successfully\n  180 |     messageResponses.forEach((response) => {\n> 181 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  182 |     });\n  183 |\n  184 |     // Verify each session has the correct number of messages"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                            "column": 29,
                            "line": 181
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  179 |     // All messages should be added successfully\n  180 |     messageResponses.forEach((response) => {\n> 181 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  182 |     });\n  183 |\n  184 |     // Verify each session has the correct number of messages\n    at forEach (/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:181:29)\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:180:22"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-09-18T15:58:38.208Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                        "column": 29,
                        "line": 181
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "4c8f7e420cc033ba00ea-8564fbafab3264d79df4",
              "file": "integration.spec.ts",
              "line": 142,
              "column": 7
            },
            {
              "title": "should maintain data consistency throughout operations",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chat-service-api",
                  "projectName": "chat-service-api",
                  "results": [
                    {
                      "workerIndex": 30,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 35,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:261:29",
                        "location": {
                          "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                          "column": 29,
                          "line": 261
                        },
                        "snippet": "  259 |         msgType.context\n  260 |       );\n> 261 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  262 |\n  263 |       const message = await response.json();\n  264 |       addedMessages.push(message);"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                            "column": 29,
                            "line": 261
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  259 |         msgType.context\n  260 |       );\n> 261 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  262 |\n  263 |       const message = await response.json();\n  264 |       addedMessages.push(message);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:261:29"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-18T15:58:38.636Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                        "column": 29,
                        "line": 261
                      }
                    },
                    {
                      "workerIndex": 31,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 44,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:261:29",
                        "location": {
                          "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                          "column": 29,
                          "line": 261
                        },
                        "snippet": "  259 |         msgType.context\n  260 |       );\n> 261 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  262 |\n  263 |       const message = await response.json();\n  264 |       addedMessages.push(message);"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                            "column": 29,
                            "line": 261
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  259 |         msgType.context\n  260 |       );\n> 261 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  262 |\n  263 |       const message = await response.json();\n  264 |       addedMessages.push(message);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:261:29"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-09-18T15:58:38.987Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/integration-Integration-an-4b3e5-tency-throughout-operations-chat-service-api-retry1/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                        "column": 29,
                        "line": 261
                      }
                    },
                    {
                      "workerIndex": 32,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 32,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:261:29",
                        "location": {
                          "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                          "column": 29,
                          "line": 261
                        },
                        "snippet": "  259 |         msgType.context\n  260 |       );\n> 261 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  262 |\n  263 |       const message = await response.json();\n  264 |       addedMessages.push(message);"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                            "column": 29,
                            "line": 261
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  259 |         msgType.context\n  260 |       );\n> 261 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  262 |\n  263 |       const message = await response.json();\n  264 |       addedMessages.push(message);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:261:29"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-09-18T15:58:39.341Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                        "column": 29,
                        "line": 261
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "4c8f7e420cc033ba00ea-054048ae2af2a1994124",
              "file": "integration.spec.ts",
              "line": 215,
              "column": 7
            },
            {
              "title": "should handle complex message context objects",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chat-service-api",
                  "projectName": "chat-service-api",
                  "results": [
                    {
                      "workerIndex": 33,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 33,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:362:27",
                        "location": {
                          "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                          "column": 27,
                          "line": 362
                        },
                        "snippet": "  360 |     );\n  361 |\n> 362 |     expect(response.ok()).toBeTruthy();\n      |                           ^\n  363 |     const message = await response.json();\n  364 |\n  365 |     // Verify complex context is preserved"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                            "column": 27,
                            "line": 362
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  360 |     );\n  361 |\n> 362 |     expect(response.ok()).toBeTruthy();\n      |                           ^\n  363 |     const message = await response.json();\n  364 |\n  365 |     // Verify complex context is preserved\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:362:27"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-18T15:58:39.685Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                        "column": 27,
                        "line": 362
                      }
                    },
                    {
                      "workerIndex": 34,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 52,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:362:27",
                        "location": {
                          "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                          "column": 27,
                          "line": 362
                        },
                        "snippet": "  360 |     );\n  361 |\n> 362 |     expect(response.ok()).toBeTruthy();\n      |                           ^\n  363 |     const message = await response.json();\n  364 |\n  365 |     // Verify complex context is preserved"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                            "column": 27,
                            "line": 362
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  360 |     );\n  361 |\n> 362 |     expect(response.ok()).toBeTruthy();\n      |                           ^\n  363 |     const message = await response.json();\n  364 |\n  365 |     // Verify complex context is preserved\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:362:27"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-09-18T15:58:40.021Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/integration-Integration-an-3f8e7-lex-message-context-objects-chat-service-api-retry1/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                        "column": 27,
                        "line": 362
                      }
                    },
                    {
                      "workerIndex": 35,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 39,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:362:27",
                        "location": {
                          "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                          "column": 27,
                          "line": 362
                        },
                        "snippet": "  360 |     );\n  361 |\n> 362 |     expect(response.ok()).toBeTruthy();\n      |                           ^\n  363 |     const message = await response.json();\n  364 |\n  365 |     // Verify complex context is preserved"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                            "column": 27,
                            "line": 362
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  360 |     );\n  361 |\n> 362 |     expect(response.ok()).toBeTruthy();\n      |                           ^\n  363 |     const message = await response.json();\n  364 |\n  365 |     // Verify complex context is preserved\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts:362:27"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-09-18T15:58:40.380Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/integration.spec.ts",
                        "column": 27,
                        "line": 362
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "4c8f7e420cc033ba00ea-d269a44f4a6ecca79190",
              "file": "integration.spec.ts",
              "line": 306,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "messages.spec.ts",
      "file": "messages.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Chat Messages Operations",
          "file": "messages.spec.ts",
          "line": 9,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "Add Messages",
              "file": "messages.spec.ts",
              "line": 29,
              "column": 8,
              "specs": [
                {
                  "title": "should add user message to session",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 36,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 31,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:46:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 46
                            },
                            "snippet": "  44 |       );\n  45 |\n> 46 |       expect(response.ok()).toBeTruthy();\n     |                             ^\n  47 |       expect(response.status()).toBe(201);\n  48 |\n  49 |       const message: ChatMessage = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 46
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  44 |       );\n  45 |\n> 46 |       expect(response.ok()).toBeTruthy();\n     |                             ^\n  47 |       expect(response.status()).toBe(201);\n  48 |\n  49 |       const message: ChatMessage = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:46:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:40.731Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 46
                          }
                        },
                        {
                          "workerIndex": 37,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 47,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:46:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 46
                            },
                            "snippet": "  44 |       );\n  45 |\n> 46 |       expect(response.ok()).toBeTruthy();\n     |                             ^\n  47 |       expect(response.status()).toBe(201);\n  48 |\n  49 |       const message: ChatMessage = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 46
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  44 |       );\n  45 |\n> 46 |       expect(response.ok()).toBeTruthy();\n     |                             ^\n  47 |       expect(response.status()).toBe(201);\n  48 |\n  49 |       const message: ChatMessage = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:46:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:41.071Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/messages-Chat-Messages-Ope-7bd2d-add-user-message-to-session-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 46
                          }
                        },
                        {
                          "workerIndex": 38,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 36,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:46:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 46
                            },
                            "snippet": "  44 |       );\n  45 |\n> 46 |       expect(response.ok()).toBeTruthy();\n     |                             ^\n  47 |       expect(response.status()).toBe(201);\n  48 |\n  49 |       const message: ChatMessage = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 46
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  44 |       );\n  45 |\n> 46 |       expect(response.ok()).toBeTruthy();\n     |                             ^\n  47 |       expect(response.status()).toBe(201);\n  48 |\n  49 |       const message: ChatMessage = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:46:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:41.433Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 46
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-057ea48cd09c1170501c",
                  "file": "messages.spec.ts",
                  "line": 30,
                  "column": 9
                },
                {
                  "title": "should add assistant message with context",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 39,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 31,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:73:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 73
                            },
                            "snippet": "  71 |       );\n  72 |\n> 73 |       expect(response.ok()).toBeTruthy();\n     |                             ^\n  74 |       expect(response.status()).toBe(201);\n  75 |\n  76 |       const message: ChatMessage = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 73
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  71 |       );\n  72 |\n> 73 |       expect(response.ok()).toBeTruthy();\n     |                             ^\n  74 |       expect(response.status()).toBe(201);\n  75 |\n  76 |       const message: ChatMessage = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:73:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:41.773Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 73
                          }
                        },
                        {
                          "workerIndex": 40,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 49,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:73:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 73
                            },
                            "snippet": "  71 |       );\n  72 |\n> 73 |       expect(response.ok()).toBeTruthy();\n     |                             ^\n  74 |       expect(response.status()).toBe(201);\n  75 |\n  76 |       const message: ChatMessage = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 73
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  71 |       );\n  72 |\n> 73 |       expect(response.ok()).toBeTruthy();\n     |                             ^\n  74 |       expect(response.status()).toBe(201);\n  75 |\n  76 |       const message: ChatMessage = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:73:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:42.117Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/messages-Chat-Messages-Ope-aa91e-istant-message-with-context-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 73
                          }
                        },
                        {
                          "workerIndex": 41,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 32,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:73:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 73
                            },
                            "snippet": "  71 |       );\n  72 |\n> 73 |       expect(response.ok()).toBeTruthy();\n     |                             ^\n  74 |       expect(response.status()).toBe(201);\n  75 |\n  76 |       const message: ChatMessage = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 73
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  71 |       );\n  72 |\n> 73 |       expect(response.ok()).toBeTruthy();\n     |                             ^\n  74 |       expect(response.status()).toBe(201);\n  75 |\n  76 |       const message: ChatMessage = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:73:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:42.479Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 73
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-ab809d482275a3c46600",
                  "file": "messages.spec.ts",
                  "line": 58,
                  "column": 9
                },
                {
                  "title": "should add system message",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 42,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 31,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:97:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 97
                            },
                            "snippet": "   95 |       );\n   96 |\n>  97 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n   98 |       expect(response.status()).toBe(201);\n   99 |\n  100 |       const message: ChatMessage = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 97
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n   95 |       );\n   96 |\n>  97 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n   98 |       expect(response.status()).toBe(201);\n   99 |\n  100 |       const message: ChatMessage = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:97:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:42.812Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 97
                          }
                        },
                        {
                          "workerIndex": 43,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 49,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:97:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 97
                            },
                            "snippet": "   95 |       );\n   96 |\n>  97 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n   98 |       expect(response.status()).toBe(201);\n   99 |\n  100 |       const message: ChatMessage = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 97
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n   95 |       );\n   96 |\n>  97 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n   98 |       expect(response.status()).toBe(201);\n   99 |\n  100 |       const message: ChatMessage = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:97:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:43.160Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/messages-Chat-Messages-Ope-f034c-s-should-add-system-message-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 97
                          }
                        },
                        {
                          "workerIndex": 44,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 36,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:97:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 97
                            },
                            "snippet": "   95 |       );\n   96 |\n>  97 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n   98 |       expect(response.status()).toBe(201);\n   99 |\n  100 |       const message: ChatMessage = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 97
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n   95 |       );\n   96 |\n>  97 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n   98 |       expect(response.status()).toBe(201);\n   99 |\n  100 |       const message: ChatMessage = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:97:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:43.537Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 97
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-fca7b27b05eb2a244ebd",
                  "file": "messages.spec.ts",
                  "line": 83,
                  "column": 9
                },
                {
                  "title": "should return 404 for non-existent session",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 45,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 25,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:114:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 33,
                              "line": 114
                            },
                            "snippet": "  112 |       );\n  113 |\n> 114 |       expect(response.status()).toBe(404);\n      |                                 ^\n  115 |       const error = await response.json();\n  116 |       expect(error).toHaveProperty(\"errors\");\n  117 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 33,
                                "line": 114
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  112 |       );\n  113 |\n> 114 |       expect(response.status()).toBe(404);\n      |                                 ^\n  115 |       const error = await response.json();\n  116 |       expect(error).toHaveProperty(\"errors\");\n  117 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:114:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:43.885Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 33,
                            "line": 114
                          }
                        },
                        {
                          "workerIndex": 46,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 35,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:114:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 33,
                              "line": 114
                            },
                            "snippet": "  112 |       );\n  113 |\n> 114 |       expect(response.status()).toBe(404);\n      |                                 ^\n  115 |       const error = await response.json();\n  116 |       expect(error).toHaveProperty(\"errors\");\n  117 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 33,
                                "line": 114
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  112 |       );\n  113 |\n> 114 |       expect(response.status()).toBe(404);\n      |                                 ^\n  115 |       const error = await response.json();\n  116 |       expect(error).toHaveProperty(\"errors\");\n  117 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:114:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:44.221Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/messages-Chat-Messages-Ope-81592-04-for-non-existent-session-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 33,
                            "line": 114
                          }
                        },
                        {
                          "workerIndex": 47,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 23,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:114:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 33,
                              "line": 114
                            },
                            "snippet": "  112 |       );\n  113 |\n> 114 |       expect(response.status()).toBe(404);\n      |                                 ^\n  115 |       const error = await response.json();\n  116 |       expect(error).toHaveProperty(\"errors\");\n  117 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 33,
                                "line": 114
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  112 |       );\n  113 |\n> 114 |       expect(response.status()).toBe(404);\n      |                                 ^\n  115 |       const error = await response.json();\n  116 |       expect(error).toHaveProperty(\"errors\");\n  117 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:114:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:44.569Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 33,
                            "line": 114
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-8ecca0992392368f7874",
                  "file": "messages.spec.ts",
                  "line": 105,
                  "column": 9
                },
                {
                  "title": "should validate session ID format",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 48,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 23,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:44.899Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-846642157500c34d7fcb",
                  "file": "messages.spec.ts",
                  "line": 119,
                  "column": 9
                },
                {
                  "title": "should validate sender enum",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 48,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 21,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:44.933Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-5a62ef8f2d0584a9ad48",
                  "file": "messages.spec.ts",
                  "line": 133,
                  "column": 9
                },
                {
                  "title": "should require content field",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 48,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 18,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:44.961Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-624271dc5ba61f01c0b9",
                  "file": "messages.spec.ts",
                  "line": 155,
                  "column": 9
                },
                {
                  "title": "should handle empty content",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 48,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 17,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:44.985Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-3e8f1e1017a35016798f",
                  "file": "messages.spec.ts",
                  "line": 177,
                  "column": 9
                },
                {
                  "title": "should handle very long content",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 48,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 15,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:45.008Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-837893592cca08220163",
                  "file": "messages.spec.ts",
                  "line": 197,
                  "column": 9
                },
                {
                  "title": "should update session lastMessageAt when message is added",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 48,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 118,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:237:36",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 36,
                              "line": 237
                            },
                            "snippet": "  235 |         messageData.content\n  236 |       );\n> 237 |       expect(messageResponse.ok()).toBeTruthy();\n      |                                    ^\n  238 |\n  239 |       // Verify session was updated (would need to get session details if API supports it)\n  240 |       // For now, we'll verify the message was created successfully"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 36,
                                "line": 237
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  235 |         messageData.content\n  236 |       );\n> 237 |       expect(messageResponse.ok()).toBeTruthy();\n      |                                    ^\n  238 |\n  239 |       // Verify session was updated (would need to get session details if API supports it)\n  240 |       // For now, we'll verify the message was created successfully\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:237:36"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:45.029Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 36,
                            "line": 237
                          }
                        },
                        {
                          "workerIndex": 49,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 156,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:237:36",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 36,
                              "line": 237
                            },
                            "snippet": "  235 |         messageData.content\n  236 |       );\n> 237 |       expect(messageResponse.ok()).toBeTruthy();\n      |                                    ^\n  238 |\n  239 |       // Verify session was updated (would need to get session details if API supports it)\n  240 |       // For now, we'll verify the message was created successfully"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 36,
                                "line": 237
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  235 |         messageData.content\n  236 |       );\n> 237 |       expect(messageResponse.ok()).toBeTruthy();\n      |                                    ^\n  238 |\n  239 |       // Verify session was updated (would need to get session details if API supports it)\n  240 |       // For now, we'll verify the message was created successfully\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:237:36"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:45.456Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/messages-Chat-Messages-Ope-35897-ageAt-when-message-is-added-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 36,
                            "line": 237
                          }
                        },
                        {
                          "workerIndex": 50,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 139,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:237:36",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 36,
                              "line": 237
                            },
                            "snippet": "  235 |         messageData.content\n  236 |       );\n> 237 |       expect(messageResponse.ok()).toBeTruthy();\n      |                                    ^\n  238 |\n  239 |       // Verify session was updated (would need to get session details if API supports it)\n  240 |       // For now, we'll verify the message was created successfully"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 36,
                                "line": 237
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  235 |         messageData.content\n  236 |       );\n> 237 |       expect(messageResponse.ok()).toBeTruthy();\n      |                                    ^\n  238 |\n  239 |       // Verify session was updated (would need to get session details if API supports it)\n  240 |       // For now, we'll verify the message was created successfully\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:237:36"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:45.926Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 36,
                            "line": 237
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-3525de97b54a2f8ca9ca",
                  "file": "messages.spec.ts",
                  "line": 218,
                  "column": 9
                }
              ]
            },
            {
              "title": "Get Messages",
              "file": "messages.spec.ts",
              "line": 246,
              "column": 8,
              "specs": [
                {
                  "title": "should retrieve messages from session",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 51,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 32,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:269:31",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 31,
                              "line": 269
                            },
                            "snippet": "  267 |           msg.context\n  268 |         );\n> 269 |         expect(response.ok()).toBeTruthy();\n      |                               ^\n  270 |       }\n  271 |\n  272 |       // Retrieve messages"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 31,
                                "line": 269
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  267 |           msg.context\n  268 |         );\n> 269 |         expect(response.ok()).toBeTruthy();\n      |                               ^\n  270 |       }\n  271 |\n  272 |       // Retrieve messages\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:269:31"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:46.370Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 31,
                            "line": 269
                          }
                        },
                        {
                          "workerIndex": 52,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 61,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:269:31",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 31,
                              "line": 269
                            },
                            "snippet": "  267 |           msg.context\n  268 |         );\n> 269 |         expect(response.ok()).toBeTruthy();\n      |                               ^\n  270 |       }\n  271 |\n  272 |       // Retrieve messages"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 31,
                                "line": 269
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  267 |           msg.context\n  268 |         );\n> 269 |         expect(response.ok()).toBeTruthy();\n      |                               ^\n  270 |       }\n  271 |\n  272 |       // Retrieve messages\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:269:31"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:46.709Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/messages-Chat-Messages-Ope-a8bd0-rieve-messages-from-session-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 31,
                            "line": 269
                          }
                        },
                        {
                          "workerIndex": 53,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 35,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:269:31",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 31,
                              "line": 269
                            },
                            "snippet": "  267 |           msg.context\n  268 |         );\n> 269 |         expect(response.ok()).toBeTruthy();\n      |                               ^\n  270 |       }\n  271 |\n  272 |       // Retrieve messages"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 31,
                                "line": 269
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  267 |           msg.context\n  268 |         );\n> 269 |         expect(response.ok()).toBeTruthy();\n      |                               ^\n  270 |       }\n  271 |\n  272 |       // Retrieve messages\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:269:31"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:47.085Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 31,
                            "line": 269
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-20069a48853ba3c8dd2a",
                  "file": "messages.spec.ts",
                  "line": 247,
                  "column": 9
                },
                {
                  "title": "should handle pagination with limit",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 54,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 103,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:304:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 304
                            },
                            "snippet": "  302 |       // Get first 3 messages\n  303 |       const response = await api.getMessages(session.id, 3);\n> 304 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  305 |\n  306 |       const messages: ChatMessage[] = await response.json();\n  307 |       expect(messages).toHaveLength(3);"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 304
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  302 |       // Get first 3 messages\n  303 |       const response = await api.getMessages(session.id, 3);\n> 304 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  305 |\n  306 |       const messages: ChatMessage[] = await response.json();\n  307 |       expect(messages).toHaveLength(3);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:304:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:47.462Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 304
                          }
                        },
                        {
                          "workerIndex": 55,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 83,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:304:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 304
                            },
                            "snippet": "  302 |       // Get first 3 messages\n  303 |       const response = await api.getMessages(session.id, 3);\n> 304 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  305 |\n  306 |       const messages: ChatMessage[] = await response.json();\n  307 |       expect(messages).toHaveLength(3);"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 304
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  302 |       // Get first 3 messages\n  303 |       const response = await api.getMessages(session.id, 3);\n> 304 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  305 |\n  306 |       const messages: ChatMessage[] = await response.json();\n  307 |       expect(messages).toHaveLength(3);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:304:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:48.067Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/messages-Chat-Messages-Ope-bb108-andle-pagination-with-limit-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 304
                          }
                        },
                        {
                          "workerIndex": 56,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 84,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:304:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 304
                            },
                            "snippet": "  302 |       // Get first 3 messages\n  303 |       const response = await api.getMessages(session.id, 3);\n> 304 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  305 |\n  306 |       const messages: ChatMessage[] = await response.json();\n  307 |       expect(messages).toHaveLength(3);"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 304
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  302 |       // Get first 3 messages\n  303 |       const response = await api.getMessages(session.id, 3);\n> 304 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  305 |\n  306 |       const messages: ChatMessage[] = await response.json();\n  307 |       expect(messages).toHaveLength(3);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:304:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:48.484Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 304
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-e2c2f78c071cf2994d71",
                  "file": "messages.spec.ts",
                  "line": 289,
                  "column": 9
                },
                {
                  "title": "should handle pagination with skip",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 57,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 69,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:325:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 325
                            },
                            "snippet": "  323 |       // Skip first 2 messages\n  324 |       const response = await api.getMessages(session.id, undefined, 2);\n> 325 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  326 |\n  327 |       const messages: ChatMessage[] = await response.json();\n  328 |       expect(messages).toHaveLength(3); // 5 - 2 = 3 remaining"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 325
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  323 |       // Skip first 2 messages\n  324 |       const response = await api.getMessages(session.id, undefined, 2);\n> 325 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  326 |\n  327 |       const messages: ChatMessage[] = await response.json();\n  328 |       expect(messages).toHaveLength(3); // 5 - 2 = 3 remaining\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:325:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:48.894Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 325
                          }
                        },
                        {
                          "workerIndex": 58,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 67,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:325:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 325
                            },
                            "snippet": "  323 |       // Skip first 2 messages\n  324 |       const response = await api.getMessages(session.id, undefined, 2);\n> 325 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  326 |\n  327 |       const messages: ChatMessage[] = await response.json();\n  328 |       expect(messages).toHaveLength(3); // 5 - 2 = 3 remaining"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 325
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  323 |       // Skip first 2 messages\n  324 |       const response = await api.getMessages(session.id, undefined, 2);\n> 325 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  326 |\n  327 |       const messages: ChatMessage[] = await response.json();\n  328 |       expect(messages).toHaveLength(3); // 5 - 2 = 3 remaining\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:325:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:49.286Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/messages-Chat-Messages-Ope-1f9cd-handle-pagination-with-skip-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 325
                          }
                        },
                        {
                          "workerIndex": 59,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 43,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:325:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 325
                            },
                            "snippet": "  323 |       // Skip first 2 messages\n  324 |       const response = await api.getMessages(session.id, undefined, 2);\n> 325 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  326 |\n  327 |       const messages: ChatMessage[] = await response.json();\n  328 |       expect(messages).toHaveLength(3); // 5 - 2 = 3 remaining"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 325
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  323 |       // Skip first 2 messages\n  324 |       const response = await api.getMessages(session.id, undefined, 2);\n> 325 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  326 |\n  327 |       const messages: ChatMessage[] = await response.json();\n  328 |       expect(messages).toHaveLength(3); // 5 - 2 = 3 remaining\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:325:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:49.676Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 325
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-5fd5733df78cee390419",
                  "file": "messages.spec.ts",
                  "line": 310,
                  "column": 9
                },
                {
                  "title": "should handle limit and skip together",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 60,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 70,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:346:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 346
                            },
                            "snippet": "  344 |       // Skip 3, limit 4\n  345 |       const response = await api.getMessages(session.id, 4, 3);\n> 346 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  347 |\n  348 |       const messages: ChatMessage[] = await response.json();\n  349 |       expect(messages).toHaveLength(4);"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 346
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  344 |       // Skip 3, limit 4\n  345 |       const response = await api.getMessages(session.id, 4, 3);\n> 346 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  347 |\n  348 |       const messages: ChatMessage[] = await response.json();\n  349 |       expect(messages).toHaveLength(4);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:346:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:50.025Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 346
                          }
                        },
                        {
                          "workerIndex": 61,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 87,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:346:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 346
                            },
                            "snippet": "  344 |       // Skip 3, limit 4\n  345 |       const response = await api.getMessages(session.id, 4, 3);\n> 346 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  347 |\n  348 |       const messages: ChatMessage[] = await response.json();\n  349 |       expect(messages).toHaveLength(4);"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 346
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  344 |       // Skip 3, limit 4\n  345 |       const response = await api.getMessages(session.id, 4, 3);\n> 346 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  347 |\n  348 |       const messages: ChatMessage[] = await response.json();\n  349 |       expect(messages).toHaveLength(4);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:346:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:50.401Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/messages-Chat-Messages-Ope-9aafe-dle-limit-and-skip-together-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 346
                          }
                        },
                        {
                          "workerIndex": 62,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 59,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:346:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 346
                            },
                            "snippet": "  344 |       // Skip 3, limit 4\n  345 |       const response = await api.getMessages(session.id, 4, 3);\n> 346 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  347 |\n  348 |       const messages: ChatMessage[] = await response.json();\n  349 |       expect(messages).toHaveLength(4);"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 346
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  344 |       // Skip 3, limit 4\n  345 |       const response = await api.getMessages(session.id, 4, 3);\n> 346 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  347 |\n  348 |       const messages: ChatMessage[] = await response.json();\n  349 |       expect(messages).toHaveLength(4);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:346:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:50.799Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 346
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-128d2743507d8c8d8f70",
                  "file": "messages.spec.ts",
                  "line": 331,
                  "column": 9
                },
                {
                  "title": "should return empty array for session with no messages",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 63,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 32,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:360:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 360
                            },
                            "snippet": "  358 |\n  359 |       const response = await api.getMessages(session.id);\n> 360 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  361 |\n  362 |       const messages: ChatMessage[] = await response.json();\n  363 |       expect(Array.isArray(messages)).toBeTruthy();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 360
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  358 |\n  359 |       const response = await api.getMessages(session.id);\n> 360 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  361 |\n  362 |       const messages: ChatMessage[] = await response.json();\n  363 |       expect(Array.isArray(messages)).toBeTruthy();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:360:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:51.205Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 360
                          }
                        },
                        {
                          "workerIndex": 64,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 46,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:360:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 360
                            },
                            "snippet": "  358 |\n  359 |       const response = await api.getMessages(session.id);\n> 360 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  361 |\n  362 |       const messages: ChatMessage[] = await response.json();\n  363 |       expect(Array.isArray(messages)).toBeTruthy();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 360
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  358 |\n  359 |       const response = await api.getMessages(session.id);\n> 360 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  361 |\n  362 |       const messages: ChatMessage[] = await response.json();\n  363 |       expect(Array.isArray(messages)).toBeTruthy();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:360:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:51.542Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/messages-Chat-Messages-Ope-780b1-or-session-with-no-messages-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 360
                          }
                        },
                        {
                          "workerIndex": 65,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 32,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:360:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 360
                            },
                            "snippet": "  358 |\n  359 |       const response = await api.getMessages(session.id);\n> 360 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  361 |\n  362 |       const messages: ChatMessage[] = await response.json();\n  363 |       expect(Array.isArray(messages)).toBeTruthy();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 360
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  358 |\n  359 |       const response = await api.getMessages(session.id);\n> 360 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  361 |\n  362 |       const messages: ChatMessage[] = await response.json();\n  363 |       expect(Array.isArray(messages)).toBeTruthy();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:360:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:51.897Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 360
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-96311002238d3eebc93e",
                  "file": "messages.spec.ts",
                  "line": 352,
                  "column": 9
                },
                {
                  "title": "should return 404 for non-existent session",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 66,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 30,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:371:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 33,
                              "line": 371
                            },
                            "snippet": "  369 |       const response = await api.getMessages(nonExistentId);\n  370 |\n> 371 |       expect(response.status()).toBe(404);\n      |                                 ^\n  372 |       const error = await response.json();\n  373 |       expect(error).toHaveProperty(\"errors\");\n  374 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 33,
                                "line": 371
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  369 |       const response = await api.getMessages(nonExistentId);\n  370 |\n> 371 |       expect(response.status()).toBe(404);\n      |                                 ^\n  372 |       const error = await response.json();\n  373 |       expect(error).toHaveProperty(\"errors\");\n  374 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:371:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:52.259Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 33,
                            "line": 371
                          }
                        },
                        {
                          "workerIndex": 67,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 38,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:371:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 33,
                              "line": 371
                            },
                            "snippet": "  369 |       const response = await api.getMessages(nonExistentId);\n  370 |\n> 371 |       expect(response.status()).toBe(404);\n      |                                 ^\n  372 |       const error = await response.json();\n  373 |       expect(error).toHaveProperty(\"errors\");\n  374 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 33,
                                "line": 371
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  369 |       const response = await api.getMessages(nonExistentId);\n  370 |\n> 371 |       expect(response.status()).toBe(404);\n      |                                 ^\n  372 |       const error = await response.json();\n  373 |       expect(error).toHaveProperty(\"errors\");\n  374 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:371:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:52.617Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/messages-Chat-Messages-Ope-0c0ec-04-for-non-existent-session-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 33,
                            "line": 371
                          }
                        },
                        {
                          "workerIndex": 68,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 22,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:371:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 33,
                              "line": 371
                            },
                            "snippet": "  369 |       const response = await api.getMessages(nonExistentId);\n  370 |\n> 371 |       expect(response.status()).toBe(404);\n      |                                 ^\n  372 |       const error = await response.json();\n  373 |       expect(error).toHaveProperty(\"errors\");\n  374 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 33,
                                "line": 371
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  369 |       const response = await api.getMessages(nonExistentId);\n  370 |\n> 371 |       expect(response.status()).toBe(404);\n      |                                 ^\n  372 |       const error = await response.json();\n  373 |       expect(error).toHaveProperty(\"errors\");\n  374 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:371:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:52.964Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 33,
                            "line": 371
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-7a9749732cb8bccda6ca",
                  "file": "messages.spec.ts",
                  "line": 367,
                  "column": 9
                },
                {
                  "title": "should validate session ID format",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 69,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 25,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:53.286Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-ca77bf1df0e19c8d8c0f",
                  "file": "messages.spec.ts",
                  "line": 376,
                  "column": 9
                },
                {
                  "title": "should validate limit parameter",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 69,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 21,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:53.322Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-728b391ae21348779a4c",
                  "file": "messages.spec.ts",
                  "line": 385,
                  "column": 9
                },
                {
                  "title": "should validate skip parameter",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 69,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 20,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:53.350Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-f94283c1d3e58cefb39f",
                  "file": "messages.spec.ts",
                  "line": 403,
                  "column": 9
                },
                {
                  "title": "should decrypt message content correctly",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 69,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 24,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:433:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 433
                            },
                            "snippet": "  431 |\n  432 |       const response = await api.getMessages(session.id);\n> 433 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  434 |\n  435 |       const messages: ChatMessage[] = await response.json();\n  436 |       expect(messages).toHaveLength(1);"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 433
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  431 |\n  432 |       const response = await api.getMessages(session.id);\n> 433 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  434 |\n  435 |       const messages: ChatMessage[] = await response.json();\n  436 |       expect(messages).toHaveLength(1);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:433:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:53.377Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 433
                          }
                        },
                        {
                          "workerIndex": 70,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 65,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:433:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 433
                            },
                            "snippet": "  431 |\n  432 |       const response = await api.getMessages(session.id);\n> 433 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  434 |\n  435 |       const messages: ChatMessage[] = await response.json();\n  436 |       expect(messages).toHaveLength(1);"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 433
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  431 |\n  432 |       const response = await api.getMessages(session.id);\n> 433 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  434 |\n  435 |       const messages: ChatMessage[] = await response.json();\n  436 |       expect(messages).toHaveLength(1);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:433:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:53.705Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/messages-Chat-Messages-Ope-58697-t-message-content-correctly-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 433
                          }
                        },
                        {
                          "workerIndex": 71,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 34,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:433:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                              "column": 29,
                              "line": 433
                            },
                            "snippet": "  431 |\n  432 |       const response = await api.getMessages(session.id);\n> 433 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  434 |\n  435 |       const messages: ChatMessage[] = await response.json();\n  436 |       expect(messages).toHaveLength(1);"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                                "column": 29,
                                "line": 433
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  431 |\n  432 |       const response = await api.getMessages(session.id);\n> 433 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  434 |\n  435 |       const messages: ChatMessage[] = await response.json();\n  436 |       expect(messages).toHaveLength(1);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts:433:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:54.105Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/messages.spec.ts",
                            "column": 29,
                            "line": 433
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e397e176141d28f1033e-545420597c54dd458251",
                  "file": "messages.spec.ts",
                  "line": 421,
                  "column": 9
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "title": "rate-limiting.spec.ts",
      "file": "rate-limiting.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Rate Limiting Tests",
          "file": "rate-limiting.spec.ts",
          "line": 4,
          "column": 6,
          "specs": [
            {
              "title": "should handle normal request rate",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chat-service-api",
                  "projectName": "chat-service-api",
                  "results": [
                    {
                      "workerIndex": 72,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 42,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-18T15:58:54.445Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "47423aebe416621d8936-bb2c9f0df347127d8b75",
              "file": "rate-limiting.spec.ts",
              "line": 11,
              "column": 7
            },
            {
              "title": "should apply rate limiting for excessive requests",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [
                    {
                      "type": "skip",
                      "location": {
                        "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/rate-limiting.spec.ts",
                        "line": 29,
                        "column": 12
                      }
                    }
                  ],
                  "expectedStatus": "skipped",
                  "projectId": "chat-service-api",
                  "projectName": "chat-service-api",
                  "results": [
                    {
                      "workerIndex": 72,
                      "parallelIndex": 0,
                      "status": "skipped",
                      "duration": 2,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-18T15:58:54.500Z",
                      "annotations": [
                        {
                          "type": "skip",
                          "location": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/rate-limiting.spec.ts",
                            "line": 29,
                            "column": 12
                          }
                        }
                      ],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "47423aebe416621d8936-bb118c0f1f7e4beb934c",
              "file": "rate-limiting.spec.ts",
              "line": 26,
              "column": 7
            },
            {
              "title": "should include rate limit headers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chat-service-api",
                  "projectName": "chat-service-api",
                  "results": [
                    {
                      "workerIndex": 72,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 8,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-18T15:58:54.507Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "47423aebe416621d8936-feb9cac6270c2aa877f9",
              "file": "rate-limiting.spec.ts",
              "line": 50,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "sessions.spec.ts",
      "file": "sessions.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Chat Sessions CRUD Operations",
          "file": "sessions.spec.ts",
          "line": 8,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "Create Session",
              "file": "sessions.spec.ts",
              "line": 28,
              "column": 8,
              "specs": [
                {
                  "title": "should create session with title",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 72,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 16,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:54.526Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "316fd374235e8aec2ba4-3a265b9fb6f68c164b57",
                  "file": "sessions.spec.ts",
                  "line": 29,
                  "column": 9
                },
                {
                  "title": "should create session without title (default)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 72,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 12,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:54.548Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "316fd374235e8aec2ba4-fdc9cc4920b5197fabb5",
                  "file": "sessions.spec.ts",
                  "line": 47,
                  "column": 9
                },
                {
                  "title": "should handle empty title",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 72,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:54.566Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "316fd374235e8aec2ba4-dfefd4954f2606b3b791",
                  "file": "sessions.spec.ts",
                  "line": 62,
                  "column": 9
                },
                {
                  "title": "should handle very long title",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 72,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:54.581Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "316fd374235e8aec2ba4-668926cb620cdc089a1e",
                  "file": "sessions.spec.ts",
                  "line": 77,
                  "column": 9
                }
              ]
            },
            {
              "title": "Rename Session",
              "file": "sessions.spec.ts",
              "line": 92,
              "column": 8,
              "specs": [
                {
                  "title": "should rename existing session",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 72,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 11,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:105:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 29,
                              "line": 105
                            },
                            "snippet": "  103 |       const response = await api.renameSession(session.id, newTitle);\n  104 |\n> 105 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  106 |       expect(response.status()).toBe(200);\n  107 |\n  108 |       const updatedSession: ChatSession = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 29,
                                "line": 105
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  103 |       const response = await api.renameSession(session.id, newTitle);\n  104 |\n> 105 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  106 |       expect(response.status()).toBe(200);\n  107 |\n  108 |       const updatedSession: ChatSession = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:105:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:54.592Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 29,
                            "line": 105
                          }
                        },
                        {
                          "workerIndex": 73,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 46,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:105:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 29,
                              "line": 105
                            },
                            "snippet": "  103 |       const response = await api.renameSession(session.id, newTitle);\n  104 |\n> 105 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  106 |       expect(response.status()).toBe(200);\n  107 |\n  108 |       const updatedSession: ChatSession = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 29,
                                "line": 105
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  103 |       const response = await api.renameSession(session.id, newTitle);\n  104 |\n> 105 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  106 |       expect(response.status()).toBe(200);\n  107 |\n  108 |       const updatedSession: ChatSession = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:105:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:54.900Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/sessions-Chat-Sessions-CRU-f8d38-uld-rename-existing-session-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 29,
                            "line": 105
                          }
                        },
                        {
                          "workerIndex": 74,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 42,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:105:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 29,
                              "line": 105
                            },
                            "snippet": "  103 |       const response = await api.renameSession(session.id, newTitle);\n  104 |\n> 105 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  106 |       expect(response.status()).toBe(200);\n  107 |\n  108 |       const updatedSession: ChatSession = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 29,
                                "line": 105
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  103 |       const response = await api.renameSession(session.id, newTitle);\n  104 |\n> 105 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  106 |       expect(response.status()).toBe(200);\n  107 |\n  108 |       const updatedSession: ChatSession = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:105:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:55.289Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 29,
                            "line": 105
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "316fd374235e8aec2ba4-d7eb7c6c6f8a30b18f6c",
                  "file": "sessions.spec.ts",
                  "line": 93,
                  "column": 9
                },
                {
                  "title": "should return 404 for non-existent session",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 75,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 26,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:117:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 33,
                              "line": 117
                            },
                            "snippet": "  115 |       const response = await api.renameSession(nonExistentId, \"New Title\");\n  116 |\n> 117 |       expect(response.status()).toBe(404);\n      |                                 ^\n  118 |       const error = await response.json();\n  119 |       expect(error).toHaveProperty(\"errors\");\n  120 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 33,
                                "line": 117
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  115 |       const response = await api.renameSession(nonExistentId, \"New Title\");\n  116 |\n> 117 |       expect(response.status()).toBe(404);\n      |                                 ^\n  118 |       const error = await response.json();\n  119 |       expect(error).toHaveProperty(\"errors\");\n  120 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:117:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:55.662Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 33,
                            "line": 117
                          }
                        },
                        {
                          "workerIndex": 76,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 34,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:117:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 33,
                              "line": 117
                            },
                            "snippet": "  115 |       const response = await api.renameSession(nonExistentId, \"New Title\");\n  116 |\n> 117 |       expect(response.status()).toBe(404);\n      |                                 ^\n  118 |       const error = await response.json();\n  119 |       expect(error).toHaveProperty(\"errors\");\n  120 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 33,
                                "line": 117
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  115 |       const response = await api.renameSession(nonExistentId, \"New Title\");\n  116 |\n> 117 |       expect(response.status()).toBe(404);\n      |                                 ^\n  118 |       const error = await response.json();\n  119 |       expect(error).toHaveProperty(\"errors\");\n  120 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:117:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:55.990Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/sessions-Chat-Sessions-CRU-0ac93-04-for-non-existent-session-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 33,
                            "line": 117
                          }
                        },
                        {
                          "workerIndex": 77,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 27,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:117:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 33,
                              "line": 117
                            },
                            "snippet": "  115 |       const response = await api.renameSession(nonExistentId, \"New Title\");\n  116 |\n> 117 |       expect(response.status()).toBe(404);\n      |                                 ^\n  118 |       const error = await response.json();\n  119 |       expect(error).toHaveProperty(\"errors\");\n  120 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 33,
                                "line": 117
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  115 |       const response = await api.renameSession(nonExistentId, \"New Title\");\n  116 |\n> 117 |       expect(response.status()).toBe(404);\n      |                                 ^\n  118 |       const error = await response.json();\n  119 |       expect(error).toHaveProperty(\"errors\");\n  120 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:117:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:56.343Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 33,
                            "line": 117
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "316fd374235e8aec2ba4-ec65be45828992bd5eab",
                  "file": "sessions.spec.ts",
                  "line": 113,
                  "column": 9
                },
                {
                  "title": "should validate session ID format",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 78,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 27,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:56.691Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "316fd374235e8aec2ba4-ff4e05e3027bb21d6e45",
                  "file": "sessions.spec.ts",
                  "line": 122,
                  "column": 9
                },
                {
                  "title": "should require title in request body",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 78,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 21,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:56.730Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "316fd374235e8aec2ba4-eb4a6135fed5d4241328",
                  "file": "sessions.spec.ts",
                  "line": 131,
                  "column": 9
                }
              ]
            },
            {
              "title": "Toggle Favorite",
              "file": "sessions.spec.ts",
              "line": 151,
              "column": 8,
              "specs": [
                {
                  "title": "should mark session as favorite",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 78,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 27,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:163:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 29,
                              "line": 163
                            },
                            "snippet": "  161 |       const response = await api.toggleFavorite(session.id, true);\n  162 |\n> 163 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  164 |       expect(response.status()).toBe(200);\n  165 |\n  166 |       const updatedSession: ChatSession = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 29,
                                "line": 163
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  161 |       const response = await api.toggleFavorite(session.id, true);\n  162 |\n> 163 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  164 |       expect(response.status()).toBe(200);\n  165 |\n  166 |       const updatedSession: ChatSession = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:163:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:56.759Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 29,
                            "line": 163
                          }
                        },
                        {
                          "workerIndex": 79,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 53,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:163:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 29,
                              "line": 163
                            },
                            "snippet": "  161 |       const response = await api.toggleFavorite(session.id, true);\n  162 |\n> 163 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  164 |       expect(response.status()).toBe(200);\n  165 |\n  166 |       const updatedSession: ChatSession = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 29,
                                "line": 163
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  161 |       const response = await api.toggleFavorite(session.id, true);\n  162 |\n> 163 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  164 |       expect(response.status()).toBe(200);\n  165 |\n  166 |       const updatedSession: ChatSession = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:163:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:57.089Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/sessions-Chat-Sessions-CRU-1d18d-ld-mark-session-as-favorite-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 29,
                            "line": 163
                          }
                        },
                        {
                          "workerIndex": 80,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 35,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:163:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 29,
                              "line": 163
                            },
                            "snippet": "  161 |       const response = await api.toggleFavorite(session.id, true);\n  162 |\n> 163 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  164 |       expect(response.status()).toBe(200);\n  165 |\n  166 |       const updatedSession: ChatSession = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 29,
                                "line": 163
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  161 |       const response = await api.toggleFavorite(session.id, true);\n  162 |\n> 163 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  164 |       expect(response.status()).toBe(200);\n  165 |\n  166 |       const updatedSession: ChatSession = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:163:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:57.454Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 29,
                            "line": 163
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "316fd374235e8aec2ba4-10b31ebe68050d1f12ee",
                  "file": "sessions.spec.ts",
                  "line": 152,
                  "column": 9
                },
                {
                  "title": "should unmark session as favorite",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 81,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 41,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:184:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 29,
                              "line": 184
                            },
                            "snippet": "  182 |       const response = await api.toggleFavorite(session.id, false);\n  183 |\n> 184 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  185 |       expect(response.status()).toBe(200);\n  186 |\n  187 |       const updatedSession: ChatSession = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 29,
                                "line": 184
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  182 |       const response = await api.toggleFavorite(session.id, false);\n  183 |\n> 184 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  185 |       expect(response.status()).toBe(200);\n  186 |\n  187 |       const updatedSession: ChatSession = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:184:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:57.798Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 29,
                            "line": 184
                          }
                        },
                        {
                          "workerIndex": 82,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 55,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:184:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 29,
                              "line": 184
                            },
                            "snippet": "  182 |       const response = await api.toggleFavorite(session.id, false);\n  183 |\n> 184 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  185 |       expect(response.status()).toBe(200);\n  186 |\n  187 |       const updatedSession: ChatSession = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 29,
                                "line": 184
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  182 |       const response = await api.toggleFavorite(session.id, false);\n  183 |\n> 184 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  185 |       expect(response.status()).toBe(200);\n  186 |\n  187 |       const updatedSession: ChatSession = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:184:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:58.140Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/sessions-Chat-Sessions-CRU-798ea--unmark-session-as-favorite-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 29,
                            "line": 184
                          }
                        },
                        {
                          "workerIndex": 83,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 32,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:184:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 29,
                              "line": 184
                            },
                            "snippet": "  182 |       const response = await api.toggleFavorite(session.id, false);\n  183 |\n> 184 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  185 |       expect(response.status()).toBe(200);\n  186 |\n  187 |       const updatedSession: ChatSession = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 29,
                                "line": 184
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  182 |       const response = await api.toggleFavorite(session.id, false);\n  183 |\n> 184 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  185 |       expect(response.status()).toBe(200);\n  186 |\n  187 |       const updatedSession: ChatSession = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:184:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:58.508Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 29,
                            "line": 184
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "316fd374235e8aec2ba4-52d2bcf4f9d49efcbecc",
                  "file": "sessions.spec.ts",
                  "line": 171,
                  "column": 9
                },
                {
                  "title": "should return 404 for non-existent session",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 84,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 23,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:195:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 33,
                              "line": 195
                            },
                            "snippet": "  193 |       const response = await api.toggleFavorite(nonExistentId, true);\n  194 |\n> 195 |       expect(response.status()).toBe(404);\n      |                                 ^\n  196 |       const error = await response.json();\n  197 |       expect(error).toHaveProperty(\"errors\");\n  198 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 33,
                                "line": 195
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  193 |       const response = await api.toggleFavorite(nonExistentId, true);\n  194 |\n> 195 |       expect(response.status()).toBe(404);\n      |                                 ^\n  196 |       const error = await response.json();\n  197 |       expect(error).toHaveProperty(\"errors\");\n  198 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:195:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:58.841Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 33,
                            "line": 195
                          }
                        },
                        {
                          "workerIndex": 85,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 34,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:195:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 33,
                              "line": 195
                            },
                            "snippet": "  193 |       const response = await api.toggleFavorite(nonExistentId, true);\n  194 |\n> 195 |       expect(response.status()).toBe(404);\n      |                                 ^\n  196 |       const error = await response.json();\n  197 |       expect(error).toHaveProperty(\"errors\");\n  198 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 33,
                                "line": 195
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  193 |       const response = await api.toggleFavorite(nonExistentId, true);\n  194 |\n> 195 |       expect(response.status()).toBe(404);\n      |                                 ^\n  196 |       const error = await response.json();\n  197 |       expect(error).toHaveProperty(\"errors\");\n  198 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:195:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:58:59.207Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/sessions-Chat-Sessions-CRU-5ae8a-04-for-non-existent-session-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 33,
                            "line": 195
                          }
                        },
                        {
                          "workerIndex": 86,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 23,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:195:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 33,
                              "line": 195
                            },
                            "snippet": "  193 |       const response = await api.toggleFavorite(nonExistentId, true);\n  194 |\n> 195 |       expect(response.status()).toBe(404);\n      |                                 ^\n  196 |       const error = await response.json();\n  197 |       expect(error).toHaveProperty(\"errors\");\n  198 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 33,
                                "line": 195
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  193 |       const response = await api.toggleFavorite(nonExistentId, true);\n  194 |\n> 195 |       expect(response.status()).toBe(404);\n      |                                 ^\n  196 |       const error = await response.json();\n  197 |       expect(error).toHaveProperty(\"errors\");\n  198 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:195:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:58:59.548Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 33,
                            "line": 195
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "316fd374235e8aec2ba4-7a7bd531aacd05a2ed0b",
                  "file": "sessions.spec.ts",
                  "line": 191,
                  "column": 9
                },
                {
                  "title": "should validate boolean value for isFavorite",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 87,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 37,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:59.890Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "316fd374235e8aec2ba4-cd09d016406a128af4fb",
                  "file": "sessions.spec.ts",
                  "line": 200,
                  "column": 9
                }
              ]
            },
            {
              "title": "Delete Session",
              "file": "sessions.spec.ts",
              "line": 220,
              "column": 8,
              "specs": [
                {
                  "title": "should delete existing session",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 87,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 12,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:231:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 29,
                              "line": 231
                            },
                            "snippet": "  229 |       const response = await api.deleteSession(session.id);\n  230 |\n> 231 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  232 |       expect(response.status()).toBe(200);\n  233 |\n  234 |       // Verify it's deleted by trying to rename it"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 29,
                                "line": 231
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  229 |       const response = await api.deleteSession(session.id);\n  230 |\n> 231 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  232 |       expect(response.status()).toBe(200);\n  233 |\n  234 |       // Verify it's deleted by trying to rename it\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:231:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:58:59.939Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 29,
                            "line": 231
                          }
                        },
                        {
                          "workerIndex": 88,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 45,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:231:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 29,
                              "line": 231
                            },
                            "snippet": "  229 |       const response = await api.deleteSession(session.id);\n  230 |\n> 231 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  232 |       expect(response.status()).toBe(200);\n  233 |\n  234 |       // Verify it's deleted by trying to rename it"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 29,
                                "line": 231
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  229 |       const response = await api.deleteSession(session.id);\n  230 |\n> 231 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  232 |       expect(response.status()).toBe(200);\n  233 |\n  234 |       // Verify it's deleted by trying to rename it\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:231:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:59:00.259Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/sessions-Chat-Sessions-CRU-462ed-uld-delete-existing-session-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 29,
                            "line": 231
                          }
                        },
                        {
                          "workerIndex": 89,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 37,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:231:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 29,
                              "line": 231
                            },
                            "snippet": "  229 |       const response = await api.deleteSession(session.id);\n  230 |\n> 231 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  232 |       expect(response.status()).toBe(200);\n  233 |\n  234 |       // Verify it's deleted by trying to rename it"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 29,
                                "line": 231
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  229 |       const response = await api.deleteSession(session.id);\n  230 |\n> 231 |       expect(response.ok()).toBeTruthy();\n      |                             ^\n  232 |       expect(response.status()).toBe(200);\n  233 |\n  234 |       // Verify it's deleted by trying to rename it\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:231:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:59:00.639Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 29,
                            "line": 231
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "316fd374235e8aec2ba4-e1b36536e6cdecc88176",
                  "file": "sessions.spec.ts",
                  "line": 221,
                  "column": 9
                },
                {
                  "title": "should return 404 for non-existent session",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 24,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:246:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 33,
                              "line": 246
                            },
                            "snippet": "  244 |       const response = await api.deleteSession(nonExistentId);\n  245 |\n> 246 |       expect(response.status()).toBe(404);\n      |                                 ^\n  247 |       const error = await response.json();\n  248 |       expect(error).toHaveProperty(\"errors\");\n  249 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 33,
                                "line": 246
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  244 |       const response = await api.deleteSession(nonExistentId);\n  245 |\n> 246 |       expect(response.status()).toBe(404);\n      |                                 ^\n  247 |       const error = await response.json();\n  248 |       expect(error).toHaveProperty(\"errors\");\n  249 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:246:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:00.990Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 33,
                            "line": 246
                          }
                        },
                        {
                          "workerIndex": 91,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 35,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:246:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 33,
                              "line": 246
                            },
                            "snippet": "  244 |       const response = await api.deleteSession(nonExistentId);\n  245 |\n> 246 |       expect(response.status()).toBe(404);\n      |                                 ^\n  247 |       const error = await response.json();\n  248 |       expect(error).toHaveProperty(\"errors\");\n  249 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 33,
                                "line": 246
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  244 |       const response = await api.deleteSession(nonExistentId);\n  245 |\n> 246 |       expect(response.status()).toBe(404);\n      |                                 ^\n  247 |       const error = await response.json();\n  248 |       expect(error).toHaveProperty(\"errors\");\n  249 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:246:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:59:01.312Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/sessions-Chat-Sessions-CRU-0b401-04-for-non-existent-session-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 33,
                            "line": 246
                          }
                        },
                        {
                          "workerIndex": 92,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 23,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:246:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 33,
                              "line": 246
                            },
                            "snippet": "  244 |       const response = await api.deleteSession(nonExistentId);\n  245 |\n> 246 |       expect(response.status()).toBe(404);\n      |                                 ^\n  247 |       const error = await response.json();\n  248 |       expect(error).toHaveProperty(\"errors\");\n  249 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 33,
                                "line": 246
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  244 |       const response = await api.deleteSession(nonExistentId);\n  245 |\n> 246 |       expect(response.status()).toBe(404);\n      |                                 ^\n  247 |       const error = await response.json();\n  248 |       expect(error).toHaveProperty(\"errors\");\n  249 |     });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:246:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:59:01.654Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 33,
                            "line": 246
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "316fd374235e8aec2ba4-26d9e8ede6fee2842f16",
                  "file": "sessions.spec.ts",
                  "line": 242,
                  "column": 9
                },
                {
                  "title": "should validate session ID format",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 93,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 26,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:01.978Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "316fd374235e8aec2ba4-55da72ffb3129036f4a2",
                  "file": "sessions.spec.ts",
                  "line": 251,
                  "column": 9
                },
                {
                  "title": "should cascade delete messages when session is deleted",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 93,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 21,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:286:37",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 37,
                              "line": 286
                            },
                            "snippet": "  284 |       // Verify messages exist\n  285 |       const messagesResponse = await api.getMessages(session.id);\n> 286 |       expect(messagesResponse.ok()).toBeTruthy();\n      |                                     ^\n  287 |       const messages = await messagesResponse.json();\n  288 |       expect(Array.isArray(messages)).toBeTruthy();\n  289 |       expect(messages.length).toBe(2);"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 37,
                                "line": 286
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  284 |       // Verify messages exist\n  285 |       const messagesResponse = await api.getMessages(session.id);\n> 286 |       expect(messagesResponse.ok()).toBeTruthy();\n      |                                     ^\n  287 |       const messages = await messagesResponse.json();\n  288 |       expect(Array.isArray(messages)).toBeTruthy();\n  289 |       expect(messages.length).toBe(2);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:286:37"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:02.016Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 37,
                            "line": 286
                          }
                        },
                        {
                          "workerIndex": 94,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 52,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:286:37",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 37,
                              "line": 286
                            },
                            "snippet": "  284 |       // Verify messages exist\n  285 |       const messagesResponse = await api.getMessages(session.id);\n> 286 |       expect(messagesResponse.ok()).toBeTruthy();\n      |                                     ^\n  287 |       const messages = await messagesResponse.json();\n  288 |       expect(Array.isArray(messages)).toBeTruthy();\n  289 |       expect(messages.length).toBe(2);"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 37,
                                "line": 286
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  284 |       // Verify messages exist\n  285 |       const messagesResponse = await api.getMessages(session.id);\n> 286 |       expect(messagesResponse.ok()).toBeTruthy();\n      |                                     ^\n  287 |       const messages = await messagesResponse.json();\n  288 |       expect(Array.isArray(messages)).toBeTruthy();\n  289 |       expect(messages.length).toBe(2);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:286:37"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:59:02.339Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/sessions-Chat-Sessions-CRU-60d88-ges-when-session-is-deleted-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 37,
                            "line": 286
                          }
                        },
                        {
                          "workerIndex": 95,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 48,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:286:37",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                              "column": 37,
                              "line": 286
                            },
                            "snippet": "  284 |       // Verify messages exist\n  285 |       const messagesResponse = await api.getMessages(session.id);\n> 286 |       expect(messagesResponse.ok()).toBeTruthy();\n      |                                     ^\n  287 |       const messages = await messagesResponse.json();\n  288 |       expect(Array.isArray(messages)).toBeTruthy();\n  289 |       expect(messages.length).toBe(2);"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                                "column": 37,
                                "line": 286
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  284 |       // Verify messages exist\n  285 |       const messagesResponse = await api.getMessages(session.id);\n> 286 |       expect(messagesResponse.ok()).toBeTruthy();\n      |                                     ^\n  287 |       const messages = await messagesResponse.json();\n  288 |       expect(Array.isArray(messages)).toBeTruthy();\n  289 |       expect(messages.length).toBe(2);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts:286:37"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:59:02.728Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/sessions.spec.ts",
                            "column": 37,
                            "line": 286
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "316fd374235e8aec2ba4-04b44fc2445fd1e927fa",
                  "file": "sessions.spec.ts",
                  "line": 260,
                  "column": 9
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "title": "smart-chat-negative.spec.ts",
      "file": "smart-chat-negative.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Smart Chat Negative Scenarios",
          "file": "smart-chat-negative.spec.ts",
          "line": 4,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "Invalid Session ID",
              "file": "smart-chat-negative.spec.ts",
              "line": 24,
              "column": 8,
              "specs": [
                {
                  "title": "should return 400 for invalid session ID format",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 96,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 25,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Invalid\"\u001b[39m\nReceived string:    \u001b[31m\"ID must be a valid MongoDB ObjectId\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Invalid\"\u001b[39m\nReceived string:    \u001b[31m\"ID must be a valid MongoDB ObjectId\"\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:34:47",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 47,
                              "line": 34
                            },
                            "snippet": "  32 |       const responseBody = await response.json();\n  33 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 34 |       expect(responseBody.errors[0]?.message).toContain(\"Invalid\");\n     |                                               ^\n  35 |     });\n  36 |\n  37 |     test(\"should return 404 for non-existent session ID\", async () => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 47,
                                "line": 34
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Invalid\"\u001b[39m\nReceived string:    \u001b[31m\"ID must be a valid MongoDB ObjectId\"\u001b[39m\n\n  32 |       const responseBody = await response.json();\n  33 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 34 |       expect(responseBody.errors[0]?.message).toContain(\"Invalid\");\n     |                                               ^\n  35 |     });\n  36 |\n  37 |     test(\"should return 404 for non-existent session ID\", async () => {\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:34:47"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:03.095Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 47,
                            "line": 34
                          }
                        },
                        {
                          "workerIndex": 97,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 35,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Invalid\"\u001b[39m\nReceived string:    \u001b[31m\"ID must be a valid MongoDB ObjectId\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Invalid\"\u001b[39m\nReceived string:    \u001b[31m\"ID must be a valid MongoDB ObjectId\"\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:34:47",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 47,
                              "line": 34
                            },
                            "snippet": "  32 |       const responseBody = await response.json();\n  33 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 34 |       expect(responseBody.errors[0]?.message).toContain(\"Invalid\");\n     |                                               ^\n  35 |     });\n  36 |\n  37 |     test(\"should return 404 for non-existent session ID\", async () => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 47,
                                "line": 34
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Invalid\"\u001b[39m\nReceived string:    \u001b[31m\"ID must be a valid MongoDB ObjectId\"\u001b[39m\n\n  32 |       const responseBody = await response.json();\n  33 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 34 |       expect(responseBody.errors[0]?.message).toContain(\"Invalid\");\n     |                                               ^\n  35 |     });\n  36 |\n  37 |     test(\"should return 404 for non-existent session ID\", async () => {\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:34:47"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:59:03.426Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/smart-chat-negative-Smart--85d0f-r-invalid-session-ID-format-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 47,
                            "line": 34
                          }
                        },
                        {
                          "workerIndex": 98,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 24,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Invalid\"\u001b[39m\nReceived string:    \u001b[31m\"ID must be a valid MongoDB ObjectId\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Invalid\"\u001b[39m\nReceived string:    \u001b[31m\"ID must be a valid MongoDB ObjectId\"\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:34:47",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 47,
                              "line": 34
                            },
                            "snippet": "  32 |       const responseBody = await response.json();\n  33 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 34 |       expect(responseBody.errors[0]?.message).toContain(\"Invalid\");\n     |                                               ^\n  35 |     });\n  36 |\n  37 |     test(\"should return 404 for non-existent session ID\", async () => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 47,
                                "line": 34
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Invalid\"\u001b[39m\nReceived string:    \u001b[31m\"ID must be a valid MongoDB ObjectId\"\u001b[39m\n\n  32 |       const responseBody = await response.json();\n  33 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 34 |       expect(responseBody.errors[0]?.message).toContain(\"Invalid\");\n     |                                               ^\n  35 |     });\n  36 |\n  37 |     test(\"should return 404 for non-existent session ID\", async () => {\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:34:47"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:59:03.771Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 47,
                            "line": 34
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e925904db1edd5704ec5-57f9f8854e5c9886aa71",
                  "file": "smart-chat-negative.spec.ts",
                  "line": 25,
                  "column": 9
                },
                {
                  "title": "should return 404 for non-existent session ID",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 99,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 45,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:43:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 33,
                              "line": 43
                            },
                            "snippet": "  41 |       const response = await api.smartChat(nonExistentSessionId, message);\n  42 |\n> 43 |       expect(response.status()).toBe(404);\n     |                                 ^\n  44 |       const responseBody = await response.json();\n  45 |       expect(responseBody.errors[0]?.code).toBeDefined();\n  46 |       expect(responseBody.errors[0]?.message).toMatch(/not found/i);"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 33,
                                "line": 43
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  41 |       const response = await api.smartChat(nonExistentSessionId, message);\n  42 |\n> 43 |       expect(response.status()).toBe(404);\n     |                                 ^\n  44 |       const responseBody = await response.json();\n  45 |       expect(responseBody.errors[0]?.code).toBeDefined();\n  46 |       expect(responseBody.errors[0]?.message).toMatch(/not found/i);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:43:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:04.098Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 33,
                            "line": 43
                          }
                        },
                        {
                          "workerIndex": 100,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 38,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:43:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 33,
                              "line": 43
                            },
                            "snippet": "  41 |       const response = await api.smartChat(nonExistentSessionId, message);\n  42 |\n> 43 |       expect(response.status()).toBe(404);\n     |                                 ^\n  44 |       const responseBody = await response.json();\n  45 |       expect(responseBody.errors[0]?.code).toBeDefined();\n  46 |       expect(responseBody.errors[0]?.message).toMatch(/not found/i);"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 33,
                                "line": 43
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  41 |       const response = await api.smartChat(nonExistentSessionId, message);\n  42 |\n> 43 |       expect(response.status()).toBe(404);\n     |                                 ^\n  44 |       const responseBody = await response.json();\n  45 |       expect(responseBody.errors[0]?.code).toBeDefined();\n  46 |       expect(responseBody.errors[0]?.message).toMatch(/not found/i);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:43:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:59:04.491Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/smart-chat-negative-Smart--28916-for-non-existent-session-ID-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 33,
                            "line": 43
                          }
                        },
                        {
                          "workerIndex": 101,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 33,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:43:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 33,
                              "line": 43
                            },
                            "snippet": "  41 |       const response = await api.smartChat(nonExistentSessionId, message);\n  42 |\n> 43 |       expect(response.status()).toBe(404);\n     |                                 ^\n  44 |       const responseBody = await response.json();\n  45 |       expect(responseBody.errors[0]?.code).toBeDefined();\n  46 |       expect(responseBody.errors[0]?.message).toMatch(/not found/i);"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 33,
                                "line": 43
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  41 |       const response = await api.smartChat(nonExistentSessionId, message);\n  42 |\n> 43 |       expect(response.status()).toBe(404);\n     |                                 ^\n  44 |       const responseBody = await response.json();\n  45 |       expect(responseBody.errors[0]?.code).toBeDefined();\n  46 |       expect(responseBody.errors[0]?.message).toMatch(/not found/i);\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:43:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:59:04.838Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 33,
                            "line": 43
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e925904db1edd5704ec5-43564efe1e0ee6972243",
                  "file": "smart-chat-negative.spec.ts",
                  "line": 37,
                  "column": 9
                }
              ]
            },
            {
              "title": "Missing Required Headers",
              "file": "smart-chat-negative.spec.ts",
              "line": 50,
              "column": 8,
              "specs": [
                {
                  "title": "should return 400 when URC header is missing",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 102,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 62,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:05.276Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e925904db1edd5704ec5-1aba1f8cc911fd5b2294",
                  "file": "smart-chat-negative.spec.ts",
                  "line": 51,
                  "column": 9
                },
                {
                  "title": "should return 401 when API key is missing",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 102,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 18,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:105:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 33,
                              "line": 105
                            },
                            "snippet": "  103 |         );\n  104 |\n> 105 |       expect(response.status()).toBe(401);\n      |                                 ^\n  106 |       const responseBody = await response.json();\n  107 |       expect(responseBody.errors[0]?.code).toBeDefined();\n  108 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch("
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 33,
                                "line": 105
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  103 |         );\n  104 |\n> 105 |       expect(response.status()).toBe(401);\n      |                                 ^\n  106 |       const responseBody = await response.json();\n  107 |       expect(responseBody.errors[0]?.code).toBeDefined();\n  108 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:105:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:05.349Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 33,
                            "line": 105
                          }
                        },
                        {
                          "workerIndex": 103,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 47,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:105:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 33,
                              "line": 105
                            },
                            "snippet": "  103 |         );\n  104 |\n> 105 |       expect(response.status()).toBe(401);\n      |                                 ^\n  106 |       const responseBody = await response.json();\n  107 |       expect(responseBody.errors[0]?.code).toBeDefined();\n  108 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch("
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 33,
                                "line": 105
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  103 |         );\n  104 |\n> 105 |       expect(response.status()).toBe(401);\n      |                                 ^\n  106 |       const responseBody = await response.json();\n  107 |       expect(responseBody.errors[0]?.code).toBeDefined();\n  108 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:105:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:59:05.694Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/smart-chat-negative-Smart--3670c-401-when-API-key-is-missing-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 33,
                            "line": 105
                          }
                        },
                        {
                          "workerIndex": 104,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 102,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:105:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 33,
                              "line": 105
                            },
                            "snippet": "  103 |         );\n  104 |\n> 105 |       expect(response.status()).toBe(401);\n      |                                 ^\n  106 |       const responseBody = await response.json();\n  107 |       expect(responseBody.errors[0]?.code).toBeDefined();\n  108 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch("
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 33,
                                "line": 105
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  103 |         );\n  104 |\n> 105 |       expect(response.status()).toBe(401);\n      |                                 ^\n  106 |       const responseBody = await response.json();\n  107 |       expect(responseBody.errors[0]?.code).toBeDefined();\n  108 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:105:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:59:06.406Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 33,
                            "line": 105
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e925904db1edd5704ec5-01907ea7f67d33ad4031",
                  "file": "smart-chat-negative.spec.ts",
                  "line": 81,
                  "column": 9
                }
              ]
            },
            {
              "title": "Invalid Request Body",
              "file": "smart-chat-negative.spec.ts",
              "line": 114,
              "column": 8,
              "specs": [
                {
                  "title": "should return 400 when message is missing",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 105,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 45,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:06.834Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e925904db1edd5704ec5-bc43c04d7c1fbab6ef1d",
                  "file": "smart-chat-negative.spec.ts",
                  "line": 115,
                  "column": 9
                },
                {
                  "title": "should return 400 when message is empty string",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 105,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 30,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/empty|required/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/empty|required/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:158:61",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 61,
                              "line": 158
                            },
                            "snippet": "  156 |       const responseBody = await response.json();\n  157 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 158 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/empty|required/);\n      |                                                             ^\n  159 |     });\n  160 |\n  161 |     test(\"should return 400 when message is too long\", async () => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 61,
                                "line": 158
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/empty|required/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m\n\n  156 |       const responseBody = await response.json();\n  157 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 158 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/empty|required/);\n      |                                                             ^\n  159 |     });\n  160 |\n  161 |     test(\"should return 400 when message is too long\", async () => {\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:158:61"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:06.894Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 61,
                            "line": 158
                          }
                        },
                        {
                          "workerIndex": 106,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 49,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/empty|required/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/empty|required/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:158:61",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 61,
                              "line": 158
                            },
                            "snippet": "  156 |       const responseBody = await response.json();\n  157 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 158 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/empty|required/);\n      |                                                             ^\n  159 |     });\n  160 |\n  161 |     test(\"should return 400 when message is too long\", async () => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 61,
                                "line": 158
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/empty|required/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m\n\n  156 |       const responseBody = await response.json();\n  157 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 158 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/empty|required/);\n      |                                                             ^\n  159 |     });\n  160 |\n  161 |     test(\"should return 400 when message is too long\", async () => {\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:158:61"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:59:07.234Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/smart-chat-negative-Smart--e5ed8-hen-message-is-empty-string-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 61,
                            "line": 158
                          }
                        },
                        {
                          "workerIndex": 107,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 41,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/empty|required/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/empty|required/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:158:61",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 61,
                              "line": 158
                            },
                            "snippet": "  156 |       const responseBody = await response.json();\n  157 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 158 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/empty|required/);\n      |                                                             ^\n  159 |     });\n  160 |\n  161 |     test(\"should return 400 when message is too long\", async () => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 61,
                                "line": 158
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/empty|required/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m\n\n  156 |       const responseBody = await response.json();\n  157 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 158 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/empty|required/);\n      |                                                             ^\n  159 |     });\n  160 |\n  161 |     test(\"should return 400 when message is too long\", async () => {\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:158:61"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:59:07.625Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 61,
                            "line": 158
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e925904db1edd5704ec5-2af584731214d18c138b",
                  "file": "smart-chat-negative.spec.ts",
                  "line": 145,
                  "column": 9
                },
                {
                  "title": "should return 400 when message is too long",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 108,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 39,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/length|too long/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/length|too long/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:176:61",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 61,
                              "line": 176
                            },
                            "snippet": "  174 |       const responseBody = await response.json();\n  175 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 176 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/length|too long/);\n      |                                                             ^\n  177 |     });\n  178 |\n  179 |     test(\"should return 400 when request body is invalid JSON\", async () => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 61,
                                "line": 176
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/length|too long/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m\n\n  174 |       const responseBody = await response.json();\n  175 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 176 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/length|too long/);\n      |                                                             ^\n  177 |     });\n  178 |\n  179 |     test(\"should return 400 when request body is invalid JSON\", async () => {\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:176:61"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:08.001Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 61,
                            "line": 176
                          }
                        },
                        {
                          "workerIndex": 109,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 49,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/length|too long/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/length|too long/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:176:61",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 61,
                              "line": 176
                            },
                            "snippet": "  174 |       const responseBody = await response.json();\n  175 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 176 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/length|too long/);\n      |                                                             ^\n  177 |     });\n  178 |\n  179 |     test(\"should return 400 when request body is invalid JSON\", async () => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 61,
                                "line": 176
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/length|too long/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m\n\n  174 |       const responseBody = await response.json();\n  175 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 176 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/length|too long/);\n      |                                                             ^\n  177 |     });\n  178 |\n  179 |     test(\"should return 400 when request body is invalid JSON\", async () => {\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:176:61"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:59:08.362Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/smart-chat-negative-Smart--dbec8-00-when-message-is-too-long-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 61,
                            "line": 176
                          }
                        },
                        {
                          "workerIndex": 110,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 39,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/length|too long/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/length|too long/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:176:61",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 61,
                              "line": 176
                            },
                            "snippet": "  174 |       const responseBody = await response.json();\n  175 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 176 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/length|too long/);\n      |                                                             ^\n  177 |     });\n  178 |\n  179 |     test(\"should return 400 when request body is invalid JSON\", async () => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 61,
                                "line": 176
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/length|too long/\u001b[39m\nReceived string:  \u001b[31m\"id must be a valid mongodb objectid\"\u001b[39m\n\n  174 |       const responseBody = await response.json();\n  175 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 176 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/length|too long/);\n      |                                                             ^\n  177 |     });\n  178 |\n  179 |     test(\"should return 400 when request body is invalid JSON\", async () => {\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:176:61"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:59:08.724Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 61,
                            "line": 176
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e925904db1edd5704ec5-f2edc774816ebfe88790",
                  "file": "smart-chat-negative.spec.ts",
                  "line": 161,
                  "column": 9
                },
                {
                  "title": "should return 400 when request body is invalid JSON",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 111,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 31,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:09.074Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e925904db1edd5704ec5-0d9592f2f4186cd6814d",
                  "file": "smart-chat-negative.spec.ts",
                  "line": 179,
                  "column": 9
                }
              ]
            },
            {
              "title": "OpenAI Service Errors",
              "file": "smart-chat-negative.spec.ts",
              "line": 209,
              "column": 8,
              "specs": [
                {
                  "title": "should handle gracefully when OpenAI service is unavailable",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 111,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 20,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:230:64",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 64,
                              "line": 230
                            },
                            "snippet": "  228 |       // If OpenAI is properly configured, this will succeed (200)\n  229 |       // If there are OpenAI errors, it should return appropriate error codes (500, 402, 429, etc.)\n> 230 |       expect([200, 402, 429, 500].includes(response.status())).toBe(true);\n      |                                                                ^\n  231 |\n  232 |       if (response.status() !== 200) {\n  233 |         const responseBody = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 64,
                                "line": 230
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  228 |       // If OpenAI is properly configured, this will succeed (200)\n  229 |       // If there are OpenAI errors, it should return appropriate error codes (500, 402, 429, etc.)\n> 230 |       expect([200, 402, 429, 500].includes(response.status())).toBe(true);\n      |                                                                ^\n  231 |\n  232 |       if (response.status() !== 200) {\n  233 |         const responseBody = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:230:64"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:09.117Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 64,
                            "line": 230
                          }
                        },
                        {
                          "workerIndex": 112,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 70,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:230:64",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 64,
                              "line": 230
                            },
                            "snippet": "  228 |       // If OpenAI is properly configured, this will succeed (200)\n  229 |       // If there are OpenAI errors, it should return appropriate error codes (500, 402, 429, etc.)\n> 230 |       expect([200, 402, 429, 500].includes(response.status())).toBe(true);\n      |                                                                ^\n  231 |\n  232 |       if (response.status() !== 200) {\n  233 |         const responseBody = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 64,
                                "line": 230
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  228 |       // If OpenAI is properly configured, this will succeed (200)\n  229 |       // If there are OpenAI errors, it should return appropriate error codes (500, 402, 429, etc.)\n> 230 |       expect([200, 402, 429, 500].includes(response.status())).toBe(true);\n      |                                                                ^\n  231 |\n  232 |       if (response.status() !== 200) {\n  233 |         const responseBody = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:230:64"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:59:09.448Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/smart-chat-negative-Smart--20cbe-enAI-service-is-unavailable-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 64,
                            "line": 230
                          }
                        },
                        {
                          "workerIndex": 113,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 34,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:230:64",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 64,
                              "line": 230
                            },
                            "snippet": "  228 |       // If OpenAI is properly configured, this will succeed (200)\n  229 |       // If there are OpenAI errors, it should return appropriate error codes (500, 402, 429, etc.)\n> 230 |       expect([200, 402, 429, 500].includes(response.status())).toBe(true);\n      |                                                                ^\n  231 |\n  232 |       if (response.status() !== 200) {\n  233 |         const responseBody = await response.json();"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 64,
                                "line": 230
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  228 |       // If OpenAI is properly configured, this will succeed (200)\n  229 |       // If there are OpenAI errors, it should return appropriate error codes (500, 402, 429, etc.)\n> 230 |       expect([200, 402, 429, 500].includes(response.status())).toBe(true);\n      |                                                                ^\n  231 |\n  232 |       if (response.status() !== 200) {\n  233 |         const responseBody = await response.json();\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:230:64"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:59:09.839Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 64,
                            "line": 230
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e925904db1edd5704ec5-0367ad30024cb5fe0f9a",
                  "file": "smart-chat-negative.spec.ts",
                  "line": 210,
                  "column": 9
                },
                {
                  "title": "should return 429 for rate limiting (if configured)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 114,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 54,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:10.176Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e925904db1edd5704ec5-bcdc167709b7902a59a1",
                  "file": "smart-chat-negative.spec.ts",
                  "line": 239,
                  "column": 9
                }
              ]
            },
            {
              "title": "Content Type Validation",
              "file": "smart-chat-negative.spec.ts",
              "line": 269,
              "column": 8,
              "specs": [
                {
                  "title": "should return 400 for wrong content type",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 114,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 13,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/content-type|json/\u001b[39m\nReceived string:  \u001b[31m\"x-user-id header is required\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/content-type|json/\u001b[39m\nReceived string:  \u001b[31m\"x-user-id header is required\"\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:297:61",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 61,
                              "line": 297
                            },
                            "snippet": "  295 |       const responseBody = await response.json();\n  296 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 297 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/content-type|json/);\n      |                                                             ^\n  298 |     });\n  299 |\n  300 |     test(\"should return 400 when content type header is missing\", async () => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 61,
                                "line": 297
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/content-type|json/\u001b[39m\nReceived string:  \u001b[31m\"x-user-id header is required\"\u001b[39m\n\n  295 |       const responseBody = await response.json();\n  296 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 297 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/content-type|json/);\n      |                                                             ^\n  298 |     });\n  299 |\n  300 |     test(\"should return 400 when content type header is missing\", async () => {\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:297:61"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:10.241Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 61,
                            "line": 297
                          }
                        },
                        {
                          "workerIndex": 115,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 53,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/content-type|json/\u001b[39m\nReceived string:  \u001b[31m\"x-user-id header is required\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/content-type|json/\u001b[39m\nReceived string:  \u001b[31m\"x-user-id header is required\"\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:297:61",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 61,
                              "line": 297
                            },
                            "snippet": "  295 |       const responseBody = await response.json();\n  296 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 297 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/content-type|json/);\n      |                                                             ^\n  298 |     });\n  299 |\n  300 |     test(\"should return 400 when content type header is missing\", async () => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 61,
                                "line": 297
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/content-type|json/\u001b[39m\nReceived string:  \u001b[31m\"x-user-id header is required\"\u001b[39m\n\n  295 |       const responseBody = await response.json();\n  296 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 297 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/content-type|json/);\n      |                                                             ^\n  298 |     });\n  299 |\n  300 |     test(\"should return 400 when content type header is missing\", async () => {\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:297:61"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:59:10.570Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/smart-chat-negative-Smart--14c2c--400-for-wrong-content-type-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 61,
                            "line": 297
                          }
                        },
                        {
                          "workerIndex": 116,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 32,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/content-type|json/\u001b[39m\nReceived string:  \u001b[31m\"x-user-id header is required\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/content-type|json/\u001b[39m\nReceived string:  \u001b[31m\"x-user-id header is required\"\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:297:61",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 61,
                              "line": 297
                            },
                            "snippet": "  295 |       const responseBody = await response.json();\n  296 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 297 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/content-type|json/);\n      |                                                             ^\n  298 |     });\n  299 |\n  300 |     test(\"should return 400 when content type header is missing\", async () => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 61,
                                "line": 297
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/content-type|json/\u001b[39m\nReceived string:  \u001b[31m\"x-user-id header is required\"\u001b[39m\n\n  295 |       const responseBody = await response.json();\n  296 |       expect(responseBody.errors[0]?.code).toBeDefined();\n> 297 |       expect(responseBody.errors[0]?.message.toLowerCase()).toMatch(/content-type|json/);\n      |                                                             ^\n  298 |     });\n  299 |\n  300 |     test(\"should return 400 when content type header is missing\", async () => {\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:297:61"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:59:10.932Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 61,
                            "line": 297
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e925904db1edd5704ec5-85150b5cc0210c0b3d35",
                  "file": "smart-chat-negative.spec.ts",
                  "line": 270,
                  "column": 9
                },
                {
                  "title": "should return 400 when content type header is missing",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 117,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 39,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:11.274Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e925904db1edd5704ec5-dc87f34864970b336aad",
                  "file": "smart-chat-negative.spec.ts",
                  "line": 300,
                  "column": 9
                }
              ]
            },
            {
              "title": "HTTP Method Validation",
              "file": "smart-chat-negative.spec.ts",
              "line": 330,
              "column": 8,
              "specs": [
                {
                  "title": "should return 405 for GET method on smart-chat endpoint",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 117,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 16,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:353:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 33,
                              "line": 353
                            },
                            "snippet": "  351 |         );\n  352 |\n> 353 |       expect(response.status()).toBe(405);\n      |                                 ^\n  354 |     });\n  355 |\n  356 |     test(\"should return 405 for PUT method on smart-chat endpoint\", async () => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 33,
                                "line": 353
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  351 |         );\n  352 |\n> 353 |       expect(response.status()).toBe(405);\n      |                                 ^\n  354 |     });\n  355 |\n  356 |     test(\"should return 405 for PUT method on smart-chat endpoint\", async () => {\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:353:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:11.325Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 33,
                            "line": 353
                          }
                        },
                        {
                          "workerIndex": 118,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 58,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:353:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 33,
                              "line": 353
                            },
                            "snippet": "  351 |         );\n  352 |\n> 353 |       expect(response.status()).toBe(405);\n      |                                 ^\n  354 |     });\n  355 |\n  356 |     test(\"should return 405 for PUT method on smart-chat endpoint\", async () => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 33,
                                "line": 353
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  351 |         );\n  352 |\n> 353 |       expect(response.status()).toBe(405);\n      |                                 ^\n  354 |     });\n  355 |\n  356 |     test(\"should return 405 for PUT method on smart-chat endpoint\", async () => {\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:353:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:59:11.750Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/smart-chat-negative-Smart--57902-thod-on-smart-chat-endpoint-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 33,
                            "line": 353
                          }
                        },
                        {
                          "workerIndex": 119,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 42,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:353:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 33,
                              "line": 353
                            },
                            "snippet": "  351 |         );\n  352 |\n> 353 |       expect(response.status()).toBe(405);\n      |                                 ^\n  354 |     });\n  355 |\n  356 |     test(\"should return 405 for PUT method on smart-chat endpoint\", async () => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 33,
                                "line": 353
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  351 |         );\n  352 |\n> 353 |       expect(response.status()).toBe(405);\n      |                                 ^\n  354 |     });\n  355 |\n  356 |     test(\"should return 405 for PUT method on smart-chat endpoint\", async () => {\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:353:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:59:12.128Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 33,
                            "line": 353
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e925904db1edd5704ec5-8ac9e8e835a6af6ad72e",
                  "file": "smart-chat-negative.spec.ts",
                  "line": 331,
                  "column": 9
                },
                {
                  "title": "should return 405 for PUT method on smart-chat endpoint",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 120,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 98,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:380:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 33,
                              "line": 380
                            },
                            "snippet": "  378 |         );\n  379 |\n> 380 |       expect(response.status()).toBe(405);\n      |                                 ^\n  381 |     });\n  382 |   });\n  383 | });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 33,
                                "line": 380
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  378 |         );\n  379 |\n> 380 |       expect(response.status()).toBe(405);\n      |                                 ^\n  381 |     });\n  382 |   });\n  383 | });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:380:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:13.784Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 33,
                            "line": 380
                          }
                        },
                        {
                          "workerIndex": 121,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 69,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:380:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 33,
                              "line": 380
                            },
                            "snippet": "  378 |         );\n  379 |\n> 380 |       expect(response.status()).toBe(405);\n      |                                 ^\n  381 |     });\n  382 |   });\n  383 | });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 33,
                                "line": 380
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  378 |         );\n  379 |\n> 380 |       expect(response.status()).toBe(405);\n      |                                 ^\n  381 |     });\n  382 |   });\n  383 | });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:380:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:59:14.267Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/smart-chat-negative-Smart--6dda1-thod-on-smart-chat-endpoint-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 33,
                            "line": 380
                          }
                        },
                        {
                          "workerIndex": 122,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 65,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:380:33",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                              "column": 33,
                              "line": 380
                            },
                            "snippet": "  378 |         );\n  379 |\n> 380 |       expect(response.status()).toBe(405);\n      |                                 ^\n  381 |     });\n  382 |   });\n  383 | });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                                "column": 33,
                                "line": 380
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  378 |         );\n  379 |\n> 380 |       expect(response.status()).toBe(405);\n      |                                 ^\n  381 |     });\n  382 |   });\n  383 | });\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts:380:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:59:14.717Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/smart-chat-negative.spec.ts",
                            "column": 33,
                            "line": 380
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e925904db1edd5704ec5-329bc3fdf69c9b9fe7ff",
                  "file": "smart-chat-negative.spec.ts",
                  "line": 356,
                  "column": 9
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "title": "user-isolation.spec.ts",
      "file": "user-isolation.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "User Isolation Tests",
          "file": "user-isolation.spec.ts",
          "line": 4,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "Session Isolation",
              "file": "user-isolation.spec.ts",
              "line": 41,
              "column": 8,
              "specs": [
                {
                  "title": "users should only see their own sessions",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 123,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 101,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m1\u001b[39m\nReceived length: \u001b[31m15\u001b[39m\nReceived array:  \u001b[31m[{\"createdAt\": \"2025-09-18T15:59:15.257Z\", \"id\": \"a3739026-679b-4887-8b2b-f6c4e609d3d7\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:15.257Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.938Z\", \"id\": \"4e5e93e2-d65a-44a6-8fb2-cac07a0d058f\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 2\", \"updatedAt\": \"2025-09-18T15:44:45.938Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.927Z\", \"id\": \"7e825951-3259-4974-8bc3-e4d46c06859e\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 1\", \"updatedAt\": \"2025-09-18T15:44:45.927Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.914Z\", \"id\": \"68868daf-44a8-49e5-98fa-3ac85d65b2d2\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 0\", \"updatedAt\": \"2025-09-18T15:44:45.914Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.884Z\", \"id\": \"7057498a-ed62-45d3-aac8-b0e1270e9f20\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"Common Session Title\", \"updatedAt\": \"2025-09-18T15:44:45.884Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.082Z\", \"id\": \"ff38ae5c-a20c-4785-90e2-572eb58cfd40\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:45.082Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.712Z\", \"id\": \"27de8502-6ce3-4078-bc93-290d5021397a\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.712Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.343Z\", \"id\": \"001ef493-49e1-4b03-83c7-c6a4f88c3b05\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.343Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:43.993Z\", \"id\": \"ccaefe4f-3b65-4e15-8f16-0c71ba4251f7\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Chat\", \"updatedAt\": \"2025-09-18T15:44:43.993Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:43.615Z\", \"id\": \"6f259baf-a4b7-4d2e-ab0f-2803ca2aa6df\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Chat\", \"updatedAt\": \"2025-09-18T15:44:43.615Z\", \"userId\": \"user1\"}, ‚Ä¶]\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m1\u001b[39m\nReceived length: \u001b[31m15\u001b[39m\nReceived array:  \u001b[31m[{\"createdAt\": \"2025-09-18T15:59:15.257Z\", \"id\": \"a3739026-679b-4887-8b2b-f6c4e609d3d7\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:15.257Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.938Z\", \"id\": \"4e5e93e2-d65a-44a6-8fb2-cac07a0d058f\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 2\", \"updatedAt\": \"2025-09-18T15:44:45.938Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.927Z\", \"id\": \"7e825951-3259-4974-8bc3-e4d46c06859e\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 1\", \"updatedAt\": \"2025-09-18T15:44:45.927Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.914Z\", \"id\": \"68868daf-44a8-49e5-98fa-3ac85d65b2d2\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 0\", \"updatedAt\": \"2025-09-18T15:44:45.914Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.884Z\", \"id\": \"7057498a-ed62-45d3-aac8-b0e1270e9f20\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"Common Session Title\", \"updatedAt\": \"2025-09-18T15:44:45.884Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.082Z\", \"id\": \"ff38ae5c-a20c-4785-90e2-572eb58cfd40\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:45.082Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.712Z\", \"id\": \"27de8502-6ce3-4078-bc93-290d5021397a\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.712Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.343Z\", \"id\": \"001ef493-49e1-4b03-83c7-c6a4f88c3b05\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.343Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:43.993Z\", \"id\": \"ccaefe4f-3b65-4e15-8f16-0c71ba4251f7\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Chat\", \"updatedAt\": \"2025-09-18T15:44:43.993Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:43.615Z\", \"id\": \"6f259baf-a4b7-4d2e-ab0f-2803ca2aa6df\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Chat\", \"updatedAt\": \"2025-09-18T15:44:43.615Z\", \"userId\": \"user1\"}, ‚Ä¶]\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:60:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                              "column": 29,
                              "line": 60
                            },
                            "snippet": "  58 |       const user1Sessions: ChatSession[] = await user1SessionsResponse.json();\n  59 |\n> 60 |       expect(user1Sessions).toHaveLength(1);\n     |                             ^\n  61 |       expect(user1Sessions[0].id).toBe(user1Session.id);\n  62 |       expect(user1Sessions[0].title).toBe(\"User1 Session\");\n  63 |       expect(user1Sessions[0].userId).toBe(\"user1\");"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                                "column": 29,
                                "line": 60
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m1\u001b[39m\nReceived length: \u001b[31m15\u001b[39m\nReceived array:  \u001b[31m[{\"createdAt\": \"2025-09-18T15:59:15.257Z\", \"id\": \"a3739026-679b-4887-8b2b-f6c4e609d3d7\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:15.257Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.938Z\", \"id\": \"4e5e93e2-d65a-44a6-8fb2-cac07a0d058f\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 2\", \"updatedAt\": \"2025-09-18T15:44:45.938Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.927Z\", \"id\": \"7e825951-3259-4974-8bc3-e4d46c06859e\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 1\", \"updatedAt\": \"2025-09-18T15:44:45.927Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.914Z\", \"id\": \"68868daf-44a8-49e5-98fa-3ac85d65b2d2\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 0\", \"updatedAt\": \"2025-09-18T15:44:45.914Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.884Z\", \"id\": \"7057498a-ed62-45d3-aac8-b0e1270e9f20\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"Common Session Title\", \"updatedAt\": \"2025-09-18T15:44:45.884Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.082Z\", \"id\": \"ff38ae5c-a20c-4785-90e2-572eb58cfd40\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:45.082Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.712Z\", \"id\": \"27de8502-6ce3-4078-bc93-290d5021397a\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.712Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.343Z\", \"id\": \"001ef493-49e1-4b03-83c7-c6a4f88c3b05\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.343Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:43.993Z\", \"id\": \"ccaefe4f-3b65-4e15-8f16-0c71ba4251f7\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Chat\", \"updatedAt\": \"2025-09-18T15:44:43.993Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:43.615Z\", \"id\": \"6f259baf-a4b7-4d2e-ab0f-2803ca2aa6df\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Chat\", \"updatedAt\": \"2025-09-18T15:44:43.615Z\", \"userId\": \"user1\"}, ‚Ä¶]\u001b[39m\n\n  58 |       const user1Sessions: ChatSession[] = await user1SessionsResponse.json();\n  59 |\n> 60 |       expect(user1Sessions).toHaveLength(1);\n     |                             ^\n  61 |       expect(user1Sessions[0].id).toBe(user1Session.id);\n  62 |       expect(user1Sessions[0].title).toBe(\"User1 Session\");\n  63 |       expect(user1Sessions[0].userId).toBe(\"user1\");\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:60:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:15.164Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                            "column": 29,
                            "line": 60
                          }
                        },
                        {
                          "workerIndex": 124,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 99,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m1\u001b[39m\nReceived length: \u001b[31m16\u001b[39m\nReceived array:  \u001b[31m[{\"createdAt\": \"2025-09-18T15:59:15.750Z\", \"id\": \"680fe3e3-9d82-40fd-ab96-d9d7a9172d36\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:15.750Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:59:15.257Z\", \"id\": \"a3739026-679b-4887-8b2b-f6c4e609d3d7\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:15.257Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.938Z\", \"id\": \"4e5e93e2-d65a-44a6-8fb2-cac07a0d058f\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 2\", \"updatedAt\": \"2025-09-18T15:44:45.938Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.927Z\", \"id\": \"7e825951-3259-4974-8bc3-e4d46c06859e\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 1\", \"updatedAt\": \"2025-09-18T15:44:45.927Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.914Z\", \"id\": \"68868daf-44a8-49e5-98fa-3ac85d65b2d2\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 0\", \"updatedAt\": \"2025-09-18T15:44:45.914Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.884Z\", \"id\": \"7057498a-ed62-45d3-aac8-b0e1270e9f20\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"Common Session Title\", \"updatedAt\": \"2025-09-18T15:44:45.884Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.082Z\", \"id\": \"ff38ae5c-a20c-4785-90e2-572eb58cfd40\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:45.082Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.712Z\", \"id\": \"27de8502-6ce3-4078-bc93-290d5021397a\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.712Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.343Z\", \"id\": \"001ef493-49e1-4b03-83c7-c6a4f88c3b05\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.343Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:43.993Z\", \"id\": \"ccaefe4f-3b65-4e15-8f16-0c71ba4251f7\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Chat\", \"updatedAt\": \"2025-09-18T15:44:43.993Z\", \"userId\": \"user1\"}, ‚Ä¶]\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m1\u001b[39m\nReceived length: \u001b[31m16\u001b[39m\nReceived array:  \u001b[31m[{\"createdAt\": \"2025-09-18T15:59:15.750Z\", \"id\": \"680fe3e3-9d82-40fd-ab96-d9d7a9172d36\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:15.750Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:59:15.257Z\", \"id\": \"a3739026-679b-4887-8b2b-f6c4e609d3d7\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:15.257Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.938Z\", \"id\": \"4e5e93e2-d65a-44a6-8fb2-cac07a0d058f\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 2\", \"updatedAt\": \"2025-09-18T15:44:45.938Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.927Z\", \"id\": \"7e825951-3259-4974-8bc3-e4d46c06859e\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 1\", \"updatedAt\": \"2025-09-18T15:44:45.927Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.914Z\", \"id\": \"68868daf-44a8-49e5-98fa-3ac85d65b2d2\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 0\", \"updatedAt\": \"2025-09-18T15:44:45.914Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.884Z\", \"id\": \"7057498a-ed62-45d3-aac8-b0e1270e9f20\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"Common Session Title\", \"updatedAt\": \"2025-09-18T15:44:45.884Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.082Z\", \"id\": \"ff38ae5c-a20c-4785-90e2-572eb58cfd40\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:45.082Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.712Z\", \"id\": \"27de8502-6ce3-4078-bc93-290d5021397a\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.712Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.343Z\", \"id\": \"001ef493-49e1-4b03-83c7-c6a4f88c3b05\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.343Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:43.993Z\", \"id\": \"ccaefe4f-3b65-4e15-8f16-0c71ba4251f7\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Chat\", \"updatedAt\": \"2025-09-18T15:44:43.993Z\", \"userId\": \"user1\"}, ‚Ä¶]\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:60:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                              "column": 29,
                              "line": 60
                            },
                            "snippet": "  58 |       const user1Sessions: ChatSession[] = await user1SessionsResponse.json();\n  59 |\n> 60 |       expect(user1Sessions).toHaveLength(1);\n     |                             ^\n  61 |       expect(user1Sessions[0].id).toBe(user1Session.id);\n  62 |       expect(user1Sessions[0].title).toBe(\"User1 Session\");\n  63 |       expect(user1Sessions[0].userId).toBe(\"user1\");"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                                "column": 29,
                                "line": 60
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m1\u001b[39m\nReceived length: \u001b[31m16\u001b[39m\nReceived array:  \u001b[31m[{\"createdAt\": \"2025-09-18T15:59:15.750Z\", \"id\": \"680fe3e3-9d82-40fd-ab96-d9d7a9172d36\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:15.750Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:59:15.257Z\", \"id\": \"a3739026-679b-4887-8b2b-f6c4e609d3d7\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:15.257Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.938Z\", \"id\": \"4e5e93e2-d65a-44a6-8fb2-cac07a0d058f\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 2\", \"updatedAt\": \"2025-09-18T15:44:45.938Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.927Z\", \"id\": \"7e825951-3259-4974-8bc3-e4d46c06859e\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 1\", \"updatedAt\": \"2025-09-18T15:44:45.927Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.914Z\", \"id\": \"68868daf-44a8-49e5-98fa-3ac85d65b2d2\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 0\", \"updatedAt\": \"2025-09-18T15:44:45.914Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.884Z\", \"id\": \"7057498a-ed62-45d3-aac8-b0e1270e9f20\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"Common Session Title\", \"updatedAt\": \"2025-09-18T15:44:45.884Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.082Z\", \"id\": \"ff38ae5c-a20c-4785-90e2-572eb58cfd40\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:45.082Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.712Z\", \"id\": \"27de8502-6ce3-4078-bc93-290d5021397a\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.712Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.343Z\", \"id\": \"001ef493-49e1-4b03-83c7-c6a4f88c3b05\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.343Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:43.993Z\", \"id\": \"ccaefe4f-3b65-4e15-8f16-0c71ba4251f7\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Chat\", \"updatedAt\": \"2025-09-18T15:44:43.993Z\", \"userId\": \"user1\"}, ‚Ä¶]\u001b[39m\n\n  58 |       const user1Sessions: ChatSession[] = await user1SessionsResponse.json();\n  59 |\n> 60 |       expect(user1Sessions).toHaveLength(1);\n     |                             ^\n  61 |       expect(user1Sessions[0].id).toBe(user1Session.id);\n  62 |       expect(user1Sessions[0].title).toBe(\"User1 Session\");\n  63 |       expect(user1Sessions[0].userId).toBe(\"user1\");\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:60:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:59:15.648Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/user-isolation-User-Isolat-2b3ae-only-see-their-own-sessions-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                            "column": 29,
                            "line": 60
                          }
                        },
                        {
                          "workerIndex": 125,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 63,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m1\u001b[39m\nReceived length: \u001b[31m17\u001b[39m\nReceived array:  \u001b[31m[{\"createdAt\": \"2025-09-18T15:59:16.211Z\", \"id\": \"709ac776-08c1-4a78-b616-47f9242a3907\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:16.211Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:59:15.750Z\", \"id\": \"680fe3e3-9d82-40fd-ab96-d9d7a9172d36\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:15.750Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:59:15.257Z\", \"id\": \"a3739026-679b-4887-8b2b-f6c4e609d3d7\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:15.257Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.938Z\", \"id\": \"4e5e93e2-d65a-44a6-8fb2-cac07a0d058f\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 2\", \"updatedAt\": \"2025-09-18T15:44:45.938Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.927Z\", \"id\": \"7e825951-3259-4974-8bc3-e4d46c06859e\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 1\", \"updatedAt\": \"2025-09-18T15:44:45.927Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.914Z\", \"id\": \"68868daf-44a8-49e5-98fa-3ac85d65b2d2\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 0\", \"updatedAt\": \"2025-09-18T15:44:45.914Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.884Z\", \"id\": \"7057498a-ed62-45d3-aac8-b0e1270e9f20\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"Common Session Title\", \"updatedAt\": \"2025-09-18T15:44:45.884Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.082Z\", \"id\": \"ff38ae5c-a20c-4785-90e2-572eb58cfd40\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:45.082Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.712Z\", \"id\": \"27de8502-6ce3-4078-bc93-290d5021397a\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.712Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.343Z\", \"id\": \"001ef493-49e1-4b03-83c7-c6a4f88c3b05\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.343Z\", \"userId\": \"user1\"}, ‚Ä¶]\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m1\u001b[39m\nReceived length: \u001b[31m17\u001b[39m\nReceived array:  \u001b[31m[{\"createdAt\": \"2025-09-18T15:59:16.211Z\", \"id\": \"709ac776-08c1-4a78-b616-47f9242a3907\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:16.211Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:59:15.750Z\", \"id\": \"680fe3e3-9d82-40fd-ab96-d9d7a9172d36\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:15.750Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:59:15.257Z\", \"id\": \"a3739026-679b-4887-8b2b-f6c4e609d3d7\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:15.257Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.938Z\", \"id\": \"4e5e93e2-d65a-44a6-8fb2-cac07a0d058f\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 2\", \"updatedAt\": \"2025-09-18T15:44:45.938Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.927Z\", \"id\": \"7e825951-3259-4974-8bc3-e4d46c06859e\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 1\", \"updatedAt\": \"2025-09-18T15:44:45.927Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.914Z\", \"id\": \"68868daf-44a8-49e5-98fa-3ac85d65b2d2\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 0\", \"updatedAt\": \"2025-09-18T15:44:45.914Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.884Z\", \"id\": \"7057498a-ed62-45d3-aac8-b0e1270e9f20\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"Common Session Title\", \"updatedAt\": \"2025-09-18T15:44:45.884Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.082Z\", \"id\": \"ff38ae5c-a20c-4785-90e2-572eb58cfd40\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:45.082Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.712Z\", \"id\": \"27de8502-6ce3-4078-bc93-290d5021397a\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.712Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.343Z\", \"id\": \"001ef493-49e1-4b03-83c7-c6a4f88c3b05\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.343Z\", \"userId\": \"user1\"}, ‚Ä¶]\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:60:29",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                              "column": 29,
                              "line": 60
                            },
                            "snippet": "  58 |       const user1Sessions: ChatSession[] = await user1SessionsResponse.json();\n  59 |\n> 60 |       expect(user1Sessions).toHaveLength(1);\n     |                             ^\n  61 |       expect(user1Sessions[0].id).toBe(user1Session.id);\n  62 |       expect(user1Sessions[0].title).toBe(\"User1 Session\");\n  63 |       expect(user1Sessions[0].userId).toBe(\"user1\");"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                                "column": 29,
                                "line": 60
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m1\u001b[39m\nReceived length: \u001b[31m17\u001b[39m\nReceived array:  \u001b[31m[{\"createdAt\": \"2025-09-18T15:59:16.211Z\", \"id\": \"709ac776-08c1-4a78-b616-47f9242a3907\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:16.211Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:59:15.750Z\", \"id\": \"680fe3e3-9d82-40fd-ab96-d9d7a9172d36\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:15.750Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:59:15.257Z\", \"id\": \"a3739026-679b-4887-8b2b-f6c4e609d3d7\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session\", \"updatedAt\": \"2025-09-18T15:59:15.257Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.938Z\", \"id\": \"4e5e93e2-d65a-44a6-8fb2-cac07a0d058f\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 2\", \"updatedAt\": \"2025-09-18T15:44:45.938Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.927Z\", \"id\": \"7e825951-3259-4974-8bc3-e4d46c06859e\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 1\", \"updatedAt\": \"2025-09-18T15:44:45.927Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.914Z\", \"id\": \"68868daf-44a8-49e5-98fa-3ac85d65b2d2\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Session 0\", \"updatedAt\": \"2025-09-18T15:44:45.914Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.884Z\", \"id\": \"7057498a-ed62-45d3-aac8-b0e1270e9f20\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"Common Session Title\", \"updatedAt\": \"2025-09-18T15:44:45.884Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:45.082Z\", \"id\": \"ff38ae5c-a20c-4785-90e2-572eb58cfd40\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:45.082Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.712Z\", \"id\": \"27de8502-6ce3-4078-bc93-290d5021397a\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.712Z\", \"userId\": \"user1\"}, {\"createdAt\": \"2025-09-18T15:44:44.343Z\", \"id\": \"001ef493-49e1-4b03-83c7-c6a4f88c3b05\", \"isFavorite\": false, \"lastMessageAt\": null, \"title\": \"User1 Favorite Test\", \"updatedAt\": \"2025-09-18T15:44:44.343Z\", \"userId\": \"user1\"}, ‚Ä¶]\u001b[39m\n\n  58 |       const user1Sessions: ChatSession[] = await user1SessionsResponse.json();\n  59 |\n> 60 |       expect(user1Sessions).toHaveLength(1);\n     |                             ^\n  61 |       expect(user1Sessions[0].id).toBe(user1Session.id);\n  62 |       expect(user1Sessions[0].title).toBe(\"User1 Session\");\n  63 |       expect(user1Sessions[0].userId).toBe(\"user1\");\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:60:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:59:16.127Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                            "column": 29,
                            "line": 60
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e7d87fdbb4cdd54e4442-2aef30246ee882a59c60",
                  "file": "user-isolation.spec.ts",
                  "line": 42,
                  "column": 9
                },
                {
                  "title": "user cannot access another user's session",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 126,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 49,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:87:45",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                              "column": 45,
                              "line": 87
                            },
                            "snippet": "  85 |       // User2 tries to access User1's session messages\n  86 |       const user2MessageResponse = await user2API.getMessages(user1Session.id);\n> 87 |       expect(user2MessageResponse.status()).toBe(404);\n     |                                             ^\n  88 |\n  89 |       // User2 tries to rename User1's session\n  90 |       const user2RenameResponse = await user2API.renameSession("
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                                "column": 45,
                                "line": 87
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  85 |       // User2 tries to access User1's session messages\n  86 |       const user2MessageResponse = await user2API.getMessages(user1Session.id);\n> 87 |       expect(user2MessageResponse.status()).toBe(404);\n     |                                             ^\n  88 |\n  89 |       // User2 tries to rename User1's session\n  90 |       const user2RenameResponse = await user2API.renameSession(\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:87:45"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:16.555Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                            "column": 45,
                            "line": 87
                          }
                        },
                        {
                          "workerIndex": 127,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 72,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:87:45",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                              "column": 45,
                              "line": 87
                            },
                            "snippet": "  85 |       // User2 tries to access User1's session messages\n  86 |       const user2MessageResponse = await user2API.getMessages(user1Session.id);\n> 87 |       expect(user2MessageResponse.status()).toBe(404);\n     |                                             ^\n  88 |\n  89 |       // User2 tries to rename User1's session\n  90 |       const user2RenameResponse = await user2API.renameSession("
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                                "column": 45,
                                "line": 87
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  85 |       // User2 tries to access User1's session messages\n  86 |       const user2MessageResponse = await user2API.getMessages(user1Session.id);\n> 87 |       expect(user2MessageResponse.status()).toBe(404);\n     |                                             ^\n  88 |\n  89 |       // User2 tries to rename User1's session\n  90 |       const user2RenameResponse = await user2API.renameSession(\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:87:45"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:59:16.939Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/user-isolation-User-Isolat-7d245-cess-another-user-s-session-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                            "column": 45,
                            "line": 87
                          }
                        },
                        {
                          "workerIndex": 128,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 42,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:87:45",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                              "column": 45,
                              "line": 87
                            },
                            "snippet": "  85 |       // User2 tries to access User1's session messages\n  86 |       const user2MessageResponse = await user2API.getMessages(user1Session.id);\n> 87 |       expect(user2MessageResponse.status()).toBe(404);\n     |                                             ^\n  88 |\n  89 |       // User2 tries to rename User1's session\n  90 |       const user2RenameResponse = await user2API.renameSession("
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                                "column": 45,
                                "line": 87
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  85 |       // User2 tries to access User1's session messages\n  86 |       const user2MessageResponse = await user2API.getMessages(user1Session.id);\n> 87 |       expect(user2MessageResponse.status()).toBe(404);\n     |                                             ^\n  88 |\n  89 |       // User2 tries to rename User1's session\n  90 |       const user2RenameResponse = await user2API.renameSession(\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:87:45"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:59:17.330Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                            "column": 45,
                            "line": 87
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e7d87fdbb4cdd54e4442-ae063ceb6445e28bb5df",
                  "file": "user-isolation.spec.ts",
                  "line": 76,
                  "column": 9
                },
                {
                  "title": "user cannot add messages to another user's session",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 129,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 40,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:122:41",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                              "column": 41,
                              "line": 122
                            },
                            "snippet": "  120 |         \"Hello from user1\"\n  121 |       );\n> 122 |       expect(user1MessageResponse.ok()).toBeTruthy();\n      |                                         ^\n  123 |\n  124 |       // User2 tries to add a message to User1's session\n  125 |       const user2MessageResponse = await user2API.addMessage("
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                                "column": 41,
                                "line": 122
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  120 |         \"Hello from user1\"\n  121 |       );\n> 122 |       expect(user1MessageResponse.ok()).toBeTruthy();\n      |                                         ^\n  123 |\n  124 |       // User2 tries to add a message to User1's session\n  125 |       const user2MessageResponse = await user2API.addMessage(\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:122:41"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:17.676Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                            "column": 41,
                            "line": 122
                          }
                        },
                        {
                          "workerIndex": 130,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 56,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:122:41",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                              "column": 41,
                              "line": 122
                            },
                            "snippet": "  120 |         \"Hello from user1\"\n  121 |       );\n> 122 |       expect(user1MessageResponse.ok()).toBeTruthy();\n      |                                         ^\n  123 |\n  124 |       // User2 tries to add a message to User1's session\n  125 |       const user2MessageResponse = await user2API.addMessage("
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                                "column": 41,
                                "line": 122
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  120 |         \"Hello from user1\"\n  121 |       );\n> 122 |       expect(user1MessageResponse.ok()).toBeTruthy();\n      |                                         ^\n  123 |\n  124 |       // User2 tries to add a message to User1's session\n  125 |       const user2MessageResponse = await user2API.addMessage(\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:122:41"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:59:18.019Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/user-isolation-User-Isolat-23b1c-s-to-another-user-s-session-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                            "column": 41,
                            "line": 122
                          }
                        },
                        {
                          "workerIndex": 131,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 37,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:122:41",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                              "column": 41,
                              "line": 122
                            },
                            "snippet": "  120 |         \"Hello from user1\"\n  121 |       );\n> 122 |       expect(user1MessageResponse.ok()).toBeTruthy();\n      |                                         ^\n  123 |\n  124 |       // User2 tries to add a message to User1's session\n  125 |       const user2MessageResponse = await user2API.addMessage("
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                                "column": 41,
                                "line": 122
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  120 |         \"Hello from user1\"\n  121 |       );\n> 122 |       expect(user1MessageResponse.ok()).toBeTruthy();\n      |                                         ^\n  123 |\n  124 |       // User2 tries to add a message to User1's session\n  125 |       const user2MessageResponse = await user2API.addMessage(\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:122:41"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:59:18.388Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                            "column": 41,
                            "line": 122
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e7d87fdbb4cdd54e4442-b6bff774d41751c9cfa8",
                  "file": "user-isolation.spec.ts",
                  "line": 109,
                  "column": 9
                },
                {
                  "title": "user cannot toggle favorite on another user's session",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 132,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 35,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:153:46",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                              "column": 46,
                              "line": 153
                            },
                            "snippet": "  151 |         true\n  152 |       );\n> 153 |       expect(user2FavoriteResponse.status()).toBe(404);\n      |                                              ^\n  154 |\n  155 |       // User1 can toggle their own session\n  156 |       const user1FavoriteResponse = await user1API.toggleFavorite("
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                                "column": 46,
                                "line": 153
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  151 |         true\n  152 |       );\n> 153 |       expect(user2FavoriteResponse.status()).toBe(404);\n      |                                              ^\n  154 |\n  155 |       // User1 can toggle their own session\n  156 |       const user1FavoriteResponse = await user1API.toggleFavorite(\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:153:46"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:18.727Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                            "column": 46,
                            "line": 153
                          }
                        },
                        {
                          "workerIndex": 133,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 57,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:153:46",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                              "column": 46,
                              "line": 153
                            },
                            "snippet": "  151 |         true\n  152 |       );\n> 153 |       expect(user2FavoriteResponse.status()).toBe(404);\n      |                                              ^\n  154 |\n  155 |       // User1 can toggle their own session\n  156 |       const user1FavoriteResponse = await user1API.toggleFavorite("
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                                "column": 46,
                                "line": 153
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  151 |         true\n  152 |       );\n> 153 |       expect(user2FavoriteResponse.status()).toBe(404);\n      |                                              ^\n  154 |\n  155 |       // User1 can toggle their own session\n  156 |       const user1FavoriteResponse = await user1API.toggleFavorite(\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:153:46"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 1,
                          "startTime": "2025-09-18T15:59:19.072Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "trace",
                              "contentType": "application/zip",
                              "path": "/Users/meherwerali/Downloads/client-assignment/automation/test-results/user-isolation-User-Isolat-b202e-e-on-another-user-s-session-chat-service-api-retry1/trace.zip"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                            "column": 46,
                            "line": 153
                          }
                        },
                        {
                          "workerIndex": 134,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 39,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:153:46",
                            "location": {
                              "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                              "column": 46,
                              "line": 153
                            },
                            "snippet": "  151 |         true\n  152 |       );\n> 153 |       expect(user2FavoriteResponse.status()).toBe(404);\n      |                                              ^\n  154 |\n  155 |       // User1 can toggle their own session\n  156 |       const user1FavoriteResponse = await user1API.toggleFavorite("
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                                "column": 46,
                                "line": 153
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  151 |         true\n  152 |       );\n> 153 |       expect(user2FavoriteResponse.status()).toBe(404);\n      |                                              ^\n  154 |\n  155 |       // User1 can toggle their own session\n  156 |       const user1FavoriteResponse = await user1API.toggleFavorite(\n    at /Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts:153:46"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 2,
                          "startTime": "2025-09-18T15:59:19.444Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/meherwerali/Downloads/client-assignment/automation/tests/user-isolation.spec.ts",
                            "column": 46,
                            "line": 153
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e7d87fdbb4cdd54e4442-3cc0a0fd4a4b099db5ad",
                  "file": "user-isolation.spec.ts",
                  "line": 141,
                  "column": 9
                }
              ]
            },
            {
              "title": "User ID Validation",
              "file": "user-isolation.spec.ts",
              "line": 166,
              "column": 8,
              "specs": [
                {
                  "title": "should reject requests without x-user-id header",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 135,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 25,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:19.812Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e7d87fdbb4cdd54e4442-5d2612ca381cf56cf4f6",
                  "file": "user-isolation.spec.ts",
                  "line": 167,
                  "column": 9
                },
                {
                  "title": "should reject requests with invalid user ID format",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 135,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:19.849Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e7d87fdbb4cdd54e4442-b08082ce40d6614aab1c",
                  "file": "user-isolation.spec.ts",
                  "line": 184,
                  "column": 9
                },
                {
                  "title": "should reject requests with user ID too short",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 135,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:19.864Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e7d87fdbb4cdd54e4442-bb9f2420a7714e1cfd52",
                  "file": "user-isolation.spec.ts",
                  "line": 202,
                  "column": 9
                },
                {
                  "title": "should reject requests with user ID too long",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 135,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:19.881Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e7d87fdbb4cdd54e4442-5a35d85d04bb96d055cc",
                  "file": "user-isolation.spec.ts",
                  "line": 220,
                  "column": 9
                },
                {
                  "title": "should accept valid alphanumeric user IDs",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 135,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 81,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:19.893Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e7d87fdbb4cdd54e4442-c7eba9ee8eda677a101d",
                  "file": "user-isolation.spec.ts",
                  "line": 239,
                  "column": 9
                }
              ]
            },
            {
              "title": "Multi-User Scenarios",
              "file": "user-isolation.spec.ts",
              "line": 257,
              "column": 8,
              "specs": [
                {
                  "title": "multiple users can have sessions with the same title",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 135,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 36,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:19.983Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e7d87fdbb4cdd54e4442-b1d6014086a304edef6d",
                  "file": "user-isolation.spec.ts",
                  "line": 258,
                  "column": 9
                },
                {
                  "title": "session IDs are unique across users",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chat-service-api",
                      "projectName": "chat-service-api",
                      "results": [
                        {
                          "workerIndex": 135,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 109,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-18T15:59:20.028Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "e7d87fdbb4cdd54e4442-5bd2e8d897620005b8e3",
                  "file": "user-isolation.spec.ts",
                  "line": 280,
                  "column": 9
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-09-18T15:58:25.641Z",
    "duration": 54511.792,
    "expected": 45,
    "skipped": 1,
    "unexpected": 45,
    "flaky": 0
  }
}
